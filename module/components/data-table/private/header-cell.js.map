{"version":3,"sources":["../../../../.tmp-es/components/data-table/private/header-cell.jsx"],"names":["React","createReactClass","PropTypes","classNames","isFunction","Icon","checkProps","DATA_TABLE_HEADER_CELL","DATA_TABLE_COLUMN","DataTableHeaderCell","displayName","propTypes","assistiveTextForColumnSort","string","assistiveTextForColumnSortedAscending","assistiveTextForColumnSortedDescending","id","isRequired","isSorted","bool","label","oneOfType","node","onSort","func","property","sortable","sortDirection","oneOf","width","getInitialState","componentDidMount","props","componentDidUpdate","prevProps","setState","handleSort","e","oldSortDirection","state","data","render","labelType","expandedSortDirection","ariaSort","fixedLayoutSubRenders","undefined","notSortable","display","fixedLayout"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// ### React\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\n\n// ### classNames\nimport classNames from 'classnames';\n\n// ### isFunction\nimport isFunction from 'lodash.isfunction';\n\n// ## Children\nimport Icon from '../../icon';\n\n// This component's `checkProps` which issues warnings to developers about properties when in development mode (similar to React's built in development tools)\nimport checkProps from '../column-check-props';\n\n// ## Constants\nimport {\n\tDATA_TABLE_HEADER_CELL,\n\tDATA_TABLE_COLUMN,\n} from '../../../utilities/constants';\n\n/**\n * Used internally, renders each individual column heading.\n */\nconst DataTableHeaderCell = createReactClass({\n\t// ### Display Name\n\t// Always use the canonical component name as the React display name.\n\tdisplayName: DATA_TABLE_HEADER_CELL,\n\n\t// ### Prop Types\n\tpropTypes: {\n\t\t/**\n\t\t * Text for sort action on table column header\n\t\t *\n\t\t */\n\t\tassistiveTextForColumnSort: PropTypes.string,\n\t\t/**\n\t\t * Text announced once a column is sorted in ascending order\n\t\t */\n\t\tassistiveTextForColumnSortedAscending: PropTypes.string,\n\t\t/**\n\t\t * Text announced once a column is sorted in descending order\n\t\t */\n\t\tassistiveTextForColumnSortedDescending: PropTypes.string,\n\t\tid: PropTypes.string.isRequired,\n\t\t/**\n\t\t * Indicates if column is sorted.\n\t\t */\n\t\tisSorted: PropTypes.bool,\n\t\t/**\n\t\t * The column label.\n\t\t */\n\t\tlabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t\t/**\n\t\t * The function to execute on sort.\n\t\t */\n\t\tonSort: PropTypes.func,\n\t\t/**\n\t\t * The property which corresponds to this column.\n\t\t */\n\t\tproperty: PropTypes.string,\n\t\t/**\n\t\t * Whether or not the column is sortable.\n\t\t */\n\t\tsortable: PropTypes.bool,\n\t\t/**\n\t\t * The current sort direction.\n\t\t */\n\t\tsortDirection: PropTypes.oneOf(['desc', 'asc']),\n\t\t/**\n\t\t * Width of column. This is required for advanced/fixed layout tables. Please provide units. (`rems` are recommended)\n\t\t */\n\t\twidth: PropTypes.string,\n\t},\n\n\tgetInitialState () {\n\t\treturn {\n\t\t\tsortDirection: null,\n\t\t};\n\t},\n\n\tcomponentDidMount () {\n\t\tcheckProps(DATA_TABLE_COLUMN, this.props);\n\t},\n\n\tcomponentDidUpdate (prevProps) {\n\t\t// reset sort state when another column is sorted\n\t\tif (prevProps.isSorted === true && this.props.isSorted === false) {\n\t\t\tthis.setState({ sortDirection: null }); // eslint-disable-line react/no-did-update-set-state\n\t\t}\n\t},\n\n\thandleSort (e) {\n\t\tconst oldSortDirection =\n\t\t\tthis.props.sortDirection || this.state.sortDirection;\n\t\tconst sortDirection = oldSortDirection === 'asc' ? 'desc' : 'asc';\n\t\tconst data = {\n\t\t\tproperty: this.props.property,\n\t\t\tsortDirection,\n\t\t};\n\n\t\tthis.setState({\n\t\t\tsortDirection,\n\t\t});\n\n\t\tif (isFunction(this.props.onSort)) {\n\t\t\tthis.props.onSort(data, e);\n\t\t}\n\t},\n\n\t// ### Render\n\trender () {\n\t\tconst { isSorted, label, sortable, width } = this.props;\n\n\t\tconst labelType = typeof label;\n\t\tconst sortDirection = this.props.sortDirection || this.state.sortDirection;\n\t\tconst expandedSortDirection =\n\t\t\tsortDirection === 'desc' ? 'descending' : 'ascending';\n\t\tconst ariaSort = isSorted ? expandedSortDirection : 'none';\n\t\tconst fixedLayoutSubRenders = {\n\t\t\tsortable: (\n\t\t\t\t<a\n\t\t\t\t\thref=\"javascript:void(0)\" // eslint-disable-line no-script-url\n\t\t\t\t\tclassName=\"slds-th__action slds-text-link_reset\"\n\t\t\t\t\tonClick={this.handleSort}\n\t\t\t\t\trole=\"button\"\n\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t>\n\t\t\t\t\t<span className=\"slds-assistive-text\">\n\t\t\t\t\t\t{this.props.assistiveTextForColumnSort}{' '}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName=\"slds-truncate\"\n\t\t\t\t\t\ttitle={labelType === 'string' ? label : undefined}\n\t\t\t\t\t>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</span>\n\t\t\t\t\t<Icon\n\t\t\t\t\t\tclassName=\"slds-is-sortable__icon\"\n\t\t\t\t\t\tcategory=\"utility\"\n\t\t\t\t\t\tname={sortDirection === 'desc' ? 'arrowdown' : 'arrowup'}\n\t\t\t\t\t\tsize=\"x-small\"\n\t\t\t\t\t/>\n\t\t\t\t\t{sortDirection ? (\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName=\"slds-assistive-text\"\n\t\t\t\t\t\t\taria-live=\"assertive\"\n\t\t\t\t\t\t\taria-atomic=\"true\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{sortDirection === 'asc'\n\t\t\t\t\t\t\t\t? this.props.assistiveTextForColumnSortedAscending\n\t\t\t\t\t\t\t\t: this.props.assistiveTextForColumnSortedDescending}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t) : null}\n\t\t\t\t</a>\n\t\t\t),\n\t\t\tnotSortable: (\n\t\t\t\t<span className=\"slds-p-horizontal_x-small\" style={{ display: 'flex' }}>\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName=\"slds-truncate\"\n\t\t\t\t\t\ttitle={labelType === 'string' ? label : undefined}\n\t\t\t\t\t>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t),\n\t\t};\n\n\t\treturn (\n\t\t\t<th\n\t\t\t\taria-label={labelType === 'string' ? label : undefined}\n\t\t\t\taria-sort={ariaSort}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-is-sortable': sortable,\n\t\t\t\t\t\t'slds-is-sorted': isSorted,\n\t\t\t\t\t\t[`slds-is-sorted_${sortDirection}`]: sortDirection,\n\t\t\t\t\t\t'slds-is-sorted_asc': isSorted && !sortDirection, // default for hover, up arrow is ascending which means A is at the top of the table, and Z is at the bottom. You have to think about row numbers abstracting, and not the visual order on the table.\n\t\t\t\t\t},\n\t\t\t\t\t'slds-text-title_caps'\n\t\t\t\t)}\n\t\t\t\tscope=\"col\"\n\t\t\t\tstyle={{ width: width ? { width } : null }}\n\t\t\t>\n\t\t\t\t{this.props.fixedLayout ? (\n\t\t\t\t\tfixedLayoutSubRenders[sortable ? 'sortable' : 'notSortable']\n\t\t\t\t) : (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"slds-truncate\"\n\t\t\t\t\t\ttitle={labelType === 'string' ? label : undefined}\n\t\t\t\t\t>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</th>\n\t\t);\n\t},\n});\n\nexport default DataTableHeaderCell;\n"],"file":"header-cell.js"}