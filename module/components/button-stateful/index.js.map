{"version":3,"sources":["../../../.tmp-es/components/button-stateful/index.jsx"],"names":["React","PropTypes","classNames","isBoolean","isFunction","ButtonIcon","BUTTON_STATEFUL","propTypes","active","bool","assistiveText","string","disabled","iconName","iconSize","oneOf","inverse","onBlur","func","onClick","onFocus","onKeyDown","onKeyPress","onKeyUp","onMouseDown","onMouseEnter","onMouseLeave","responsive","stateOne","object","stateTwo","stateThree","tabIndex","tooltip","node","variant","defaultProps","label","ButtonStateful","props","e","currentTarget","blur","setState","state","className","id","isActive","getClassName","handleBlur","handleClick","Component","displayName"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// Implements the [Button Stateful design pattern](https://lightningdesignsystem.com/components/buttons/#flavor-stateful) in React.\n// Based on SLDS v2.1.1\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### classNames\nimport classNames from 'classnames';\n\n// ### isBoolean\nimport isBoolean from 'lodash.isboolean';\n\n// ### isFunction\nimport isFunction from 'lodash.isfunction';\n\n// ## Children\nimport ButtonIcon from '../icon/button-icon';\n\nimport { BUTTON_STATEFUL } from '../../utilities/constants';\n\nconst propTypes = {\n\t/**\n\t * Specifies the current state of the button. If set, the button will act as a ['controlled' component](https://facebook.github.io/react/docs/forms.html#controlled-components).\n\t */\n\tactive: PropTypes.bool,\n\t/**\n\t * Text that is visually hidden but read aloud by screenreaders to tell the user what the icon means. This should also include the state of the button.\n\t * If the button has an icon and a visible label, you can omit the <code>assistiveText</code> prop and use the <code>label</code> prop.\n\t */\n\tassistiveText: PropTypes.string,\n\t/**\n\t * Disables the button and adds disabled styling.\n\t */\n\tdisabled: PropTypes.bool,\n\t/**\n\t * Name of the icon. Visit <a href='http://www.lightningdesignsystem.com/resources/icons'>Lightning Design System Icons</a> to reference icon names.\n\t */\n\ticonName: PropTypes.string,\n\t/**\n\t * Determines the size of the icon.\n\t */\n\ticonSize: PropTypes.oneOf(['x-small', 'small', 'medium', 'large']),\n\t/**\n\t * If true, button/icon is white. Meant for buttons or utility icons on dark backgrounds.\n\t */\n\tinverse: PropTypes.bool,\n\t/**\n\t * Triggered when focus is removed.\n\t */\n\tonBlur: PropTypes.func,\n\t/**\n\t * Triggered when the button is clicked.\n\t */\n\tonClick: PropTypes.func,\n\t/**\n\t * Triggered when component is focused.\n\t */\n\tonFocus: PropTypes.func,\n\t/**\n\t * Triggered when a key is pressed down\n\t */\n\tonKeyDown: PropTypes.func,\n\t/**\n\t * Triggered when a key is pressed and released\n\t */\n\tonKeyPress: PropTypes.func,\n\t/**\n\t * Triggered when a key is released\n\t */\n\tonKeyUp: PropTypes.func,\n\t/**\n\t * Triggered when a mouse button is pressed down\n\t */\n\tonMouseDown: PropTypes.func,\n\t/**\n\t * Triggered when a mouse arrow hovers\n\t */\n\tonMouseEnter: PropTypes.func,\n\t/**\n\t * Triggered when a mouse arrow no longer hovers\n\t */\n\tonMouseLeave: PropTypes.func,\n\t/**\n\t * If true, button scales to 100% width on small form factors.\n\t */\n\tresponsive: PropTypes.bool,\n\t/**\n\t * Initial label and icon (optional) of button.\n\t */\n\tstateOne: PropTypes.object,\n\t/**\n\t * Selected label and icon (optional) of button.\n\t */\n\tstateTwo: PropTypes.object,\n\t/**\n\t * Deselect label and icon (optional) of button.\n\t */\n\tstateThree: PropTypes.object,\n\t/**\n\t * Write \"-1\" if you don't want the user to tab to the button.\n\t */\n\ttabIndex: PropTypes.string,\n\t/**\n\t * [Deprecated] Tooltip on button. Button should be a child of `Tooltip` instead.\n\t */\n\ttooltip: PropTypes.node,\n\t/**\n\t * Different types of buttons\n\t */\n\tvariant: PropTypes.oneOf(['base', 'neutral', 'brand', 'destructive', 'icon']),\n};\n\n// i18n\nconst defaultProps = {\n\tdisabled: false,\n\ticonSize: 'medium',\n\tresponsive: false,\n\tstateOne: { iconName: 'add', label: 'Follow' },\n\tstateTwo: { iconName: 'check', label: 'Following' },\n\tstateThree: { iconName: 'close', label: 'Unfollow' },\n};\n\n/**\n * The ButtonStateful component is a variant of the Lightning Design System Button component. It is used for buttons that have a state of unselected or selected.\n * For icon buttons, use <code>variant='icon'</code>. For buttons with labels or buttons with labels and icons, pass data to the state props (ie. <code>stateOne={{iconName: 'add', label: 'Join'}}</code>).\n */\nclass ButtonStateful extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\tthis.state = { active: false };\n\t}\n\n\tgetClassName (active) {\n\t\treturn classNames(this.props.className, 'slds-button', {\n\t\t\t'slds-button--neutral': this.props.variant !== 'icon',\n\t\t\t'slds-button--inverse': this.props.variant === 'inverse',\n\t\t\t'slds-not-selected': !active,\n\t\t\t'slds-is-selected': active,\n\t\t\t'slds-max-small-button--stretch': this.props.responsive,\n\t\t\t'slds-button--icon-border': this.props.variant === 'icon',\n\t\t});\n\t}\n\n\thandleBlur = (e) => {\n\t\tif (this.props.onBlur) this.props.onBlur(e);\n\t\te.currentTarget.blur();\n\t};\n\n\thandleClick = (e) => {\n\t\tif (isFunction(this.props.onClick)) this.props.onClick(e);\n\t\tif (!isBoolean(this.props.active)) {\n\t\t\tthis.setState({ active: !this.state.active });\n\t\t}\n\t};\n\n\trender () {\n\t\tconst {\n\t\t\tactive,\n\t\t\tassistiveText,\n\t\t\tdisabled,\n\t\t\ticonName,\n\t\t\ticonSize,\n\t\t\tid,\n\t\t\tonFocus,\n\t\t\tonKeyDown,\n\t\t\tonKeyPress,\n\t\t\tonKeyUp,\n\t\t\tonMouseDown,\n\t\t\tonMouseEnter,\n\t\t\t// onMouseLeave,  // This prop isn't used anywhere! But removing it would be a breaking change\n\t\t\tstateOne,\n\t\t\tstateTwo,\n\t\t\tstateThree,\n\t\t\ttabIndex,\n\t\t\tvariant,\n\t\t} = this.props;\n\n\t\tconst isActive = isBoolean(active) ? active : this.state.active;\n\n\t\tif (variant === 'icon') {\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\taria-live=\"polite\"\n\t\t\t\t\tclassName={this.getClassName(isActive)}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tid={id}\n\t\t\t\t\tonBlur={this.handleBlur}\n\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\tonFocus={onFocus}\n\t\t\t\t\tonKeyDown={onKeyDown}\n\t\t\t\t\tonKeyPress={onKeyPress}\n\t\t\t\t\tonKeyUp={onKeyUp}\n\t\t\t\t\tonMouseDown={onMouseDown}\n\t\t\t\t\tonMouseEnter={onMouseEnter}\n\t\t\t\t\tonMouseLeave={this.handleBlur}\n\t\t\t\t\ttabIndex={tabIndex}\n\t\t\t\t>\n\t\t\t\t\t<ButtonIcon\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\tname={iconName}\n\t\t\t\t\t\tsize={iconSize}\n\t\t\t\t\t\tclassName=\"slds-button__icon--stateful\"\n\t\t\t\t\t/>\n\t\t\t\t\t{assistiveText ? (\n\t\t\t\t\t\t<span className=\"slds-assistive-text\">{assistiveText}</span>\n\t\t\t\t\t) : null}\n\t\t\t\t</button>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-live=\"assertive\"\n\t\t\t\tclassName={this.getClassName(isActive)}\n\t\t\t\tdisabled={disabled}\n\t\t\t\tid={id}\n\t\t\t\tonBlur={this.handleBlur}\n\t\t\t\tonClick={this.handleClick}\n\t\t\t\tonFocus={onFocus}\n\t\t\t\tonKeyDown={onKeyDown}\n\t\t\t\tonKeyPress={onKeyPress}\n\t\t\t\tonKeyUp={onKeyUp}\n\t\t\t\tonMouseEnter={onMouseEnter}\n\t\t\t\tonMouseLeave={this.handleBlur}\n\t\t\t\ttabIndex={tabIndex}\n\t\t\t>\n\t\t\t\t<span className=\"slds-text-not-selected\">\n\t\t\t\t\t<ButtonIcon\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\tname={stateOne.iconName}\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tposition=\"left\"\n\t\t\t\t\t\tclassName=\"slds-button__icon--stateful\"\n\t\t\t\t\t/>\n\t\t\t\t\t{stateOne.label}\n\t\t\t\t</span>\n\t\t\t\t<span className=\"slds-text-selected\">\n\t\t\t\t\t<ButtonIcon\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\tname={stateTwo.iconName}\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tposition=\"left\"\n\t\t\t\t\t\tclassName=\"slds-button__icon--stateful\"\n\t\t\t\t\t/>\n\t\t\t\t\t{stateTwo.label}\n\t\t\t\t</span>\n\t\t\t\t<span className=\"slds-text-selected-focus\">\n\t\t\t\t\t<ButtonIcon\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\tname={stateThree.iconName}\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tposition=\"left\"\n\t\t\t\t\t\tclassName=\"slds-button__icon--stateful\"\n\t\t\t\t\t/>\n\t\t\t\t\t{stateThree.label}\n\t\t\t\t</span>\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nButtonStateful.displayName = BUTTON_STATEFUL;\nButtonStateful.propTypes = propTypes;\nButtonStateful.defaultProps = defaultProps;\n\nexport default ButtonStateful;\n"],"file":"index.js"}