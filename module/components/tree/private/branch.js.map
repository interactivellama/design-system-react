{"version":3,"sources":["../../../../.tmp-es/components/tree/private/branch.jsx"],"names":["React","PropTypes","isFunction","classNames","shortid","Button","Item","Highlighter","EventUtil","KEYS","mapKeyEventCallbacks","TREE_BRANCH","handleExpand","event","props","trap","onExpand","node","expand","expanded","treeIndex","handleSelect","onSelect","select","selected","handleScroll","percentage","target","scrollTop","scrollHeight","clientHeight","onScroll","findNextNode","flattenedNodes","nodes","map","flattenedNode","index","indexOf","length","findPreviousNode","handleKeyDownDown","focusedNodeIndex","handleKeyDownUp","handleKeyDownRight","handleKeyDownLeft","parent","handleKeyDownEnter","handleKeyDown","callbacks","DOWN","callback","evt","UP","RIGHT","LEFT","ENTER","handleFocus","currentTarget","getTabIndex","selectedNodeIndexes","renderInitialNode","children","htmlId","initalClassName","initialStyle","displayName","propTypes","oneOfType","number","string","isRequired","array","object","renderBranch","isExpanded","isSelected","isFocused","isLoading","loading","loader","display","paddingLeft","level","marginTop","borderRadius","marginBottom","height","backgroundColor","width","label","assistiveText","onNodeBlur","component","treeHasFocus","focus","searchTerm","func","arrayOf","bool","Branch","treeId","Array","isArray","getNodes","child","id","type","generate","branch","initial","defaultProps"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Tree Branch Component\n\n// Implements the [Tree design pattern](https://www.lightningdesignsystem.com/components/tree/) in React.\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### isFunction\nimport isFunction from 'lodash.isfunction';\n\n// ### classNames\nimport classNames from 'classnames';\n\n// ### shortid\nimport shortid from 'shortid';\n\nimport Button from '../../button';\n\n// Child components\nimport Item from './item';\n\nimport Highlighter from '../../utilities/highlighter';\n\n// ### Event Helpers\nimport EventUtil from '../../../utilities/event';\n\nimport KEYS from '../../../utilities/key-code';\nimport mapKeyEventCallbacks from '../../../utilities/key-callbacks';\n\n// ## Constants\nimport { TREE_BRANCH } from '../../../utilities/constants';\n\nconst handleExpand = (event, props) => {\n\tEventUtil.trap(event);\n\tif (isFunction(props.onExpand)) {\n\t\tprops.onExpand(event, {\n\t\t\tnode: props.node,\n\t\t\texpand: !props.node.expanded,\n\t\t\ttreeIndex: props.treeIndex,\n\t\t});\n\t}\n};\n\nconst handleSelect = (event, props) => {\n\tEventUtil.trap(event);\n\tif (isFunction(props.onSelect)) {\n\t\tprops.onSelect(event, {\n\t\t\tnode: props.node,\n\t\t\tselect: !props.node.selected,\n\t\t\ttreeIndex: props.treeIndex,\n\t\t});\n\t}\n};\n\nconst handleScroll = (event, props) => {\n\tconst percentage =\n\t\tevent.target.scrollTop /\n\t\t(event.target.scrollHeight - event.target.clientHeight) *\n\t\t100;\n\n\tif (isFunction(props.onScroll)) {\n\t\tprops.onScroll(event, {\n\t\t\tpercentage,\n\t\t});\n\t}\n};\n\nconst findNextNode = (flattenedNodes, node) => {\n\tconst nodes = flattenedNodes.map((flattenedNode) => flattenedNode.node);\n\tconst index = nodes.indexOf(node);\n\treturn flattenedNodes[(index + 1) % flattenedNodes.length];\n};\n\nconst findPreviousNode = (flattenedNodes, node) => {\n\tconst nodes = flattenedNodes.map((flattenedNode) => flattenedNode.node);\n\tlet index = nodes.indexOf(node) - 1;\n\tif (index < 0) {\n\t\tindex += flattenedNodes.length;\n\t}\n\treturn flattenedNodes[index];\n};\n\nconst handleKeyDownDown = (event, props) => {\n\tif (props.focusedNodeIndex === props.treeIndex) {\n\t\t// Select the next visible node\n\t\tconst flattenedNode = findNextNode(props.flattenedNodes, props.node);\n\t\tprops.onSelect(\n\t\t\tevent,\n\t\t\t{\n\t\t\t\tnode: flattenedNode.node,\n\t\t\t\tselect: true,\n\t\t\t\ttreeIndex: flattenedNode.treeIndex,\n\t\t\t},\n\t\t\ttrue\n\t\t);\n\t}\n};\n\nconst handleKeyDownUp = (event, props) => {\n\tif (props.focusedNodeIndex === props.treeIndex) {\n\t\t// Go to the previous visible node\n\t\tconst flattenedNode = findPreviousNode(props.flattenedNodes, props.node);\n\t\tprops.onSelect(\n\t\t\tevent,\n\t\t\t{\n\t\t\t\tnode: flattenedNode.node,\n\t\t\t\tselect: true,\n\t\t\t\ttreeIndex: flattenedNode.treeIndex,\n\t\t\t},\n\t\t\ttrue\n\t\t);\n\t}\n};\n\nconst handleKeyDownRight = (event, props) => {\n\tif (props.node.expanded) {\n\t\tif (props.node.nodes && props.node.nodes.length > 0) {\n\t\t\thandleKeyDownDown(event, props);\n\t\t}\n\t} else {\n\t\thandleExpand(event, props);\n\t}\n};\n\nconst handleKeyDownLeft = (event, props) => {\n\tif (props.node.expanded) {\n\t\thandleExpand(event, props);\n\t} else {\n\t\tconst nodes = props.flattenedNodes.map(\n\t\t\t(flattenedNode) => flattenedNode.node\n\t\t);\n\t\tconst index = nodes.indexOf(props.parent);\n\t\tif (index !== -1) {\n\t\t\tprops.onExpand(event, {\n\t\t\t\tnode: props.parent,\n\t\t\t\texpand: !props.parent.expanded,\n\t\t\t\ttreeIndex: props.flattenedNodes[index].treeIndex,\n\t\t\t});\n\t\t\tprops.onSelect(\n\t\t\t\tevent,\n\t\t\t\t{\n\t\t\t\t\tnode: props.parent,\n\t\t\t\t\tselect: true,\n\t\t\t\t\ttreeIndex: props.flattenedNodes[index].treeIndex,\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t);\n\t\t}\n\t}\n};\n\nconst handleKeyDownEnter = (event, props) => {\n\thandleSelect(event, props);\n};\n\nconst handleKeyDown = (event, props) => {\n\tmapKeyEventCallbacks(event, {\n\t\tcallbacks: {\n\t\t\t[KEYS.DOWN]: { callback: (evt) => handleKeyDownDown(evt, props) },\n\t\t\t[KEYS.UP]: { callback: (evt) => handleKeyDownUp(evt, props) },\n\t\t\t[KEYS.RIGHT]: { callback: (evt) => handleKeyDownRight(evt, props) },\n\t\t\t[KEYS.LEFT]: { callback: (evt) => handleKeyDownLeft(evt, props) },\n\t\t\t[KEYS.ENTER]: { callback: (evt) => handleKeyDownEnter(evt, props) },\n\t\t},\n\t});\n};\n\nconst handleFocus = (event, props) => {\n\tif (!props.focusedNodeIndex && event.target === event.currentTarget) {\n\t\thandleSelect(event, props);\n\t}\n};\n\nconst getTabIndex = (props) => {\n\tif (\n\t\tprops.treeIndex === props.focusedNodeIndex ||\n\t\t(props.selectedNodeIndexes.length === 0 &&\n\t\t\tprops.treeIndex === props.flattenedNodes[0].treeIndex)\n\t) {\n\t\treturn 0;\n\t}\n\treturn -1;\n};\n\nconst renderInitialNode = (children, props) => (\n\t// id intentionally not rendered here, and is present on container that includes the header\n\t<ul\n\t\taria-labelledby={`${props.htmlId}__heading`}\n\t\t// TODO\n\t\t// aria-activedescendant=\"\"\n\t\tclassName={classNames('slds-tree', props.initalClassName)}\n\t\tonScroll={(event) => {\n\t\t\thandleScroll(event, props);\n\t\t}}\n\t\trole=\"tree\"\n\t\tstyle={props.initialStyle}\n\t\t// tabIndex=\"0\"\n\t>\n\t\t{children}\n\t</ul>\n);\n\nrenderInitialNode.displayName = 'InitialNode';\n\nrenderInitialNode.propTypes = {\n\t/**\n\t * HTML `id` of the wrapping container element.\n\t */\n\thtmlId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\t/*\n\t * Class names to be added to the top-level `ul` element.\n\t */\n\tinitalClassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/*\n\t * Styles to be added to the top-level `ul` element. Useful for `overflow:hidden`.\n\t */\n\tinitialStyle: PropTypes.object,\n};\n\n// Most of these props come from the nodes array, not from the Tree props\nconst renderBranch = (children, props) => {\n\tconst isExpanded = props.node.expanded;\n\tconst isSelected = props.node.selected;\n\tconst isFocused = props.treeIndex === props.focusedNodeIndex;\n\tconst isLoading = props.node.loading;\n\n\tconst loader = (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tdisplay: 'block',\n\t\t\t\tpaddingLeft: `${1.5 * props.level + 1.5}rem`,\n\t\t\t\tmarginTop: '.5rem',\n\t\t\t}}\n\t\t>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tborderRadius: '15rem',\n\t\t\t\t\tdisplay: 'block',\n\t\t\t\t\tmarginBottom: '.75rem',\n\t\t\t\t\theight: '.5rem',\n\t\t\t\t\tbackgroundColor: 'rgb(224, 229, 238)',\n\t\t\t\t\twidth: '40%',\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tborderRadius: '15rem',\n\t\t\t\t\tdisplay: 'block',\n\t\t\t\t\tmarginBottom: '.75rem',\n\t\t\t\t\theight: '.5rem',\n\t\t\t\t\tbackgroundColor: 'rgb(224, 229, 238)',\n\t\t\t\t\twidth: '80%',\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tborderRadius: '15rem',\n\t\t\t\t\tdisplay: 'block',\n\t\t\t\t\tmarginBottom: '.75rem',\n\t\t\t\t\theight: '.5rem',\n\t\t\t\t\tbackgroundColor: 'rgb(224, 229, 238)',\n\t\t\t\t\twidth: '60%',\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t);\n\n\tconst label =\n\t\tprops.node.assistiveText ||\n\t\t(typeof props.node.label === 'string' ? props.node.label : null);\n\treturn (\n\t\t<li\n\t\t\tid={props.htmlId}\n\t\t\trole=\"treeitem\"\n\t\t\taria-level={props.level}\n\t\t\taria-expanded={isExpanded ? 'true' : 'false'}\n\t\t\taria-label={\n\t\t\t\tprops.node.nodes && props.node.nodes.length > 0 ? label : null\n\t\t\t}\n\t\t\ttabIndex={getTabIndex(props)}\n\t\t\tonKeyDown={(event) => handleKeyDown(event, props)}\n\t\t\tonFocus={(event) => handleFocus(event, props)}\n\t\t\tonBlur={props.onNodeBlur}\n\t\t\tref={(component) => {\n\t\t\t\tif (props.treeHasFocus && component && isFocused) {\n\t\t\t\t\tcomponent.focus();\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t{/* eslint-disable jsx-a11y/no-static-element-interactions */}\n\t\t\t<div\n\t\t\t\tclassName={classNames('slds-tree__item', {\n\t\t\t\t\t'slds-is-selected': isSelected,\n\t\t\t\t})}\n\t\t\t\tonClick={(event) => {\n\t\t\t\t\thandleSelect(event, props);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{/* eslint-enable jsx-a11y/no-static-element-interactions */}\n\t\t\t\t<Button\n\t\t\t\t\tassistiveText=\"Toggle\"\n\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\ticonName=\"chevronright\"\n\t\t\t\t\ticonSize=\"small\"\n\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t\tclassName=\"slds-m-right--small\"\n\t\t\t\t\trole=\"presentation\"\n\t\t\t\t\taria-controls={props.htmlId}\n\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\thandleExpand(event, props);\n\t\t\t\t\t}}\n\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t/>\n\t\t\t\t{/* eslint-disable no-script-url */}\n\t\t\t\t<a\n\t\t\t\t\tid={`${props.htmlId}__label`}\n\t\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\t\t// eslint-disable-next-line jsx-a11y/no-interactive-element-to-noninteractive-role\n\t\t\t\t\trole=\"presentation\"\n\t\t\t\t\tclassName=\"slds-truncate\"\n\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t>\n\t\t\t\t\t{/* eslint-enable no-script-url */}\n\t\t\t\t\t{<Highlighter search={props.searchTerm}>{props.label}</Highlighter>}\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t\t{isLoading ? loader : null}\n\t\t\t<ul\n\t\t\t\tclassName={classNames({\n\t\t\t\t\t'slds-is-expanded': isExpanded,\n\t\t\t\t\t'slds-is-collapsed': !isExpanded,\n\t\t\t\t})}\n\t\t\t\trole=\"group\"\n\t\t\t\taria-labelledby={`${props.htmlId}__label`}\n\t\t\t>\n\t\t\t\t{isExpanded && !isLoading ? children : null}\n\t\t\t</ul>\n\t\t</li>\n\t);\n};\n\nrenderBranch.displayName = 'Branch';\n\nrenderBranch.propTypes = {\n\t/**\n\t * HTML `id` of primary element that has `.slds-tree` on it. This component has a wrapping container element outside of `.slds-tree`.\n\t */\n\thtmlId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\t/**\n\t * The text of the tree item.\n\t */\n\tlabel: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n\t/**\n\t * The number of nestings. Determines the ARIA level and style alignment.\n\t */\n\tlevel: PropTypes.number.isRequired,\n\t/**\n\t * The current node that is being rendered.\n\t */\n\tnode: PropTypes.object.isRequired,\n\t/**\n\t * This function triggers when the expand or collapse icon is clicked or due to keyboard navigation.\n\t */\n\tonExpand: PropTypes.func.isRequired,\n\t/**\n\t * Function that will run whenever an item or branch is clicked.\n\t */\n\tonSelect: PropTypes.func,\n\t/**\n\t * Highlights term if found in node label\n\t */\n\tsearchTerm: PropTypes.string,\n\t/**\n\t * Location of node (zero index). First node is `0`. It's first child is `0-0`. This can be used to modify your nodes without searching for the node. This index is only valid if the `nodes` prop is the same as at the time of the event.\n\t */\n\ttreeIndex: PropTypes.string,\n\t/**\n\t * Flattened tree structure.\n\t */\n\tflattenedNodes: PropTypes.arrayOf(PropTypes.object),\n\t/**\n\t * Tree indexes of nodes that are currently selected.\n\t */\n\tselectedNodeIndexes: PropTypes.arrayOf(PropTypes.string),\n\t/**\n\t * Tree index of the node that is currently focused.\n\t */\n\tfocusedNodeIndex: PropTypes.string,\n\t/**\n\t * Callback for when a node is blurred.\n\t */\n\tonNodeBlur: PropTypes.func,\n\t/**\n\t * Sets focus on render.\n\t */\n\ttreeHasFocus: PropTypes.bool,\n\t/**\n\t * This node's parent.\n\t */\n\tparent: PropTypes.object,\n};\n\n/**\n * A Tree Item is a non-branching node in a hierarchical list.\n */\nconst Branch = (props) => {\n\tlet treeIndex = '';\n\tlet children;\n\n\tconst { treeId, level, onExpand, searchTerm } = props;\n\n\tif (Array.isArray(props.getNodes(props.node))) {\n\t\tchildren = props.node.nodes.map((node, index) => {\n\t\t\tlet child;\n\t\t\tconst htmlId = `${props.treeId}-${node.id}`;\n\t\t\ttreeIndex = `${index}`;\n\t\t\tif (props.treeIndex) {\n\t\t\t\ttreeIndex = `${props.treeIndex}-${treeIndex}`;\n\t\t\t}\n\n\t\t\tif (node.type === 'branch') {\n\t\t\t\tchild = (\n\t\t\t\t\t<Branch\n\t\t\t\t\t\tgetNodes={props.getNodes}\n\t\t\t\t\t\thtmlId={htmlId}\n\t\t\t\t\t\tkey={shortid.generate()}\n\t\t\t\t\t\tlabel={node.label}\n\t\t\t\t\t\tlevel={level + 1}\n\t\t\t\t\t\tnode={node}\n\t\t\t\t\t\tflattenedNodes={props.flattenedNodes}\n\t\t\t\t\t\tselectedNodeIndexes={props.selectedNodeIndexes}\n\t\t\t\t\t\tfocusedNodeIndex={props.focusedNodeIndex}\n\t\t\t\t\t\ttreeHasFocus={props.treeHasFocus}\n\t\t\t\t\t\tonNodeBlur={props.onNodeBlur}\n\t\t\t\t\t\tnodes={node.nodes}\n\t\t\t\t\t\tonSelect={props.onSelect}\n\t\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t\t\tsearchTerm={searchTerm}\n\t\t\t\t\t\ttreeId={treeId}\n\t\t\t\t\t\ttreeIndex={treeIndex}\n\t\t\t\t\t\tparent={props.node}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tchild = (\n\t\t\t\t\t<Item\n\t\t\t\t\t\tlabel={node.label}\n\t\t\t\t\t\thtmlId={htmlId}\n\t\t\t\t\t\tkey={shortid.generate()}\n\t\t\t\t\t\tlevel={level + 1}\n\t\t\t\t\t\tnode={node}\n\t\t\t\t\t\tflattenedNodes={props.flattenedNodes}\n\t\t\t\t\t\tselectedNodeIndexes={props.selectedNodeIndexes}\n\t\t\t\t\t\tfocusedNodeIndex={props.focusedNodeIndex}\n\t\t\t\t\t\ttreeHasFocus={props.treeHasFocus}\n\t\t\t\t\t\tonNodeBlur={props.onNodeBlur}\n\t\t\t\t\t\tonSelect={props.onSelect}\n\t\t\t\t\t\tonExpand={onExpand}\n\t\t\t\t\t\tsearchTerm={searchTerm}\n\t\t\t\t\t\ttreeIndex={treeIndex}\n\t\t\t\t\t\ttreeId={treeId}\n\t\t\t\t\t\tparent={props.node}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn child;\n\t\t});\n\t}\n\n\tconst branch =\n\t\tprops.level === 0\n\t\t\t? renderInitialNode(children, props)\n\t\t\t: renderBranch(children, props);\n\treturn branch;\n};\n\n// ### Display Name\n// Always use the canonical component name as the React display name.\nBranch.displayName = TREE_BRANCH;\n\n// ### Prop Types\nBranch.propTypes = {\n\t/**\n\t * A function that will be called by every branch to receive its child nodes. The parent `node` object with the branch data is passed into this function: `getNodes(node)`. If your state engine is Flux or Redux, then your tree data structure will probably be flattened or normalized within the store. This will allow you to build out your tree without transversing an actual tree of data and may be more performant.\n\t */\n\tgetNodes: PropTypes.func,\n\t/**\n\t * HTML `id` of the wrapping container element joined with the `id` of the node. This will recursively increase as the tree depth increases.\n\t */\n\thtmlId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\t/**\n\t * All tree nodes must have a unique HTML `id` for users of assistive technology. If no `id` key is present in the  is provided, one will be generated.\n\t */\n\tindex: PropTypes.number,\n\t/**\n\t * Determines if nodes in the top-level of the tree.\n\t */\n\tinitial: PropTypes.bool,\n\t/*\n\t * Class names to be added to the top-level `ul` element.\n\t */\n\tinitalClassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\tinitialStyle: PropTypes.object,\n\t/**\n\t * The text of the tree item.\n\t */\n\tlabel: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n\t/**\n\t * The number of nestings. Determines the ARIA level and style alignment.\n\t */\n\tlevel: PropTypes.number.isRequired,\n\t/**\n\t * The current node that is being rendered.\n\t */\n\tnode: PropTypes.object.isRequired,\n\t/**\n\t * Function that will run whenever an item or branch is selected (click or keyboard).\n\t */\n\tonSelect: PropTypes.func,\n\t/**\n\t * This function triggers when the expand or collapse icon is clicked.\n\t */\n\tonExpand: PropTypes.func.isRequired,\n\t/**\n\t * Highlights term if found in node label\n\t */\n\tsearchTerm: PropTypes.string,\n\t/**\n\t * Unique id used for a prefix of all tree nodes. This is the prefix for subsequent `htmlId` props.\n\t */\n\ttreeId: PropTypes.string,\n\t/**\n\t * Location of node (zero index). First node is `0`. It's first child is `0-0`. This can be used to modify your nodes without searching for the node. This index is only valid if the `nodes` prop is the same as at the time of the event.\n\t */\n\ttreeIndex: PropTypes.string,\n\t/**\n\t * Flattened tree structure.\n\t */\n\tflattenedNodes: PropTypes.arrayOf(PropTypes.object),\n\t/**\n\t * Tree indexes of nodes that are currently selected.\n\t */\n\tselectedNodeIndexes: PropTypes.arrayOf(PropTypes.string),\n\t/**\n\t * Tree index of the node that is currently focused.\n\t */\n\tfocusedNodeIndex: PropTypes.string,\n\t/**\n\t * Callback for when a node is blurred.\n\t */\n\tonNodeBlur: PropTypes.func,\n\t/**\n\t * Sets focus on render.\n\t */\n\ttreeHasFocus: PropTypes.bool,\n\t/**\n\t * This node's parent.\n\t */\n\tparent: PropTypes.object,\n};\n\nBranch.defaultProps = {\n\tlevel: 0,\n\tlabel: '',\n\ttreeIndex: '',\n\tselectedNodeIndexes: [],\n};\n\nexport default Branch;\n"],"file":"branch.js"}