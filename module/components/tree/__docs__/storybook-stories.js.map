{"version":3,"sources":["../../../../.tmp-es/components/tree/__docs__/storybook-stories.jsx"],"names":["React","createReactClass","PropTypes","storiesOf","action","cloneDeep","IconSettings","TREE","sampleNodes","Tree","Search","branchExpandClicked","itemClicked","treeScrolled","DemoTree","displayName","propTypes","exampleNodesIndex","string","noBranchSelection","bool","searchTerm","searchable","singleSelection","getDefaultProps","id","getInitialState","initalNodes","props","sampleNodesDefault","nodes","selectedNode","undefined","handleExpandClick","event","data","node","loading","expand","setTimeout","forceUpdate","expanded","handleClick","selected","select","setState","prevState","state","type","handleScroll","handleSearchChange","target","value","render","module","addDecorator","getStory","add","height","overflowY"],"mappings":"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","sourcesContent":["import React from 'react';\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\nimport { storiesOf, action } from '@storybook/react';\nimport cloneDeep from 'lodash.clonedeep';\nimport IconSettings from '../../icon-settings';\n\nimport { TREE } from '../../../utilities/constants';\nimport sampleNodes from '../../../utilities/sample-data/tree';\n\nimport Tree from '../../tree';\nimport Search from '../../forms/input/search';\n\nconst branchExpandClicked = action;\nconst itemClicked = action;\nconst treeScrolled = action;\n\nconst DemoTree = createReactClass({\n\tdisplayName: 'DemoTree',\n\n\t// ### Prop Types\n\tpropTypes: {\n\t\texampleNodesIndex: PropTypes.string,\n\t\tnoBranchSelection: PropTypes.bool,\n\t\tsearchTerm: PropTypes.string,\n\t\tsearchable: PropTypes.bool,\n\t\tsingleSelection: PropTypes.bool,\n\t},\n\n\tgetDefaultProps () {\n\t\treturn {\n\t\t\texampleNodesIndex: 'sampleNodesDefault',\n\t\t\tid: 'example-tree',\n\t\t};\n\t},\n\n\tgetInitialState () {\n\t\tconst initalNodes = this.props.exampleNodesIndex\n\t\t\t? sampleNodes[this.props.exampleNodesIndex]\n\t\t\t: sampleNodes.sampleNodesDefault;\n\t\treturn {\n\t\t\tnodes: cloneDeep(initalNodes),\n\t\t\tselectedNode: undefined,\n\t\t\tsearchTerm: this.props.searchable ? 'fruit' : undefined,\n\t\t};\n\t},\n\n\t// By default Tree can have multiple selected nodes and folders/branches can be selected. To disable either of these, you can use the following logic. However, `props` are immutable. The node passed in shouldn't be modified, and due to object and arrays being reference variables, forceUpate is needed. This is just a \"working example\" not a prescription.\n\thandleExpandClick (event, data) {\n\t\tbranchExpandClicked('Expand Branch')(event, data);\n\t\tdata.node.loading = data.expand ? true : undefined;\n\n\t\t// Fake delay to demonstrate use of loading node attibute\n\t\tsetTimeout(\n\t\t\t(node) => {\n\t\t\t\tnode.loading = false;\n\t\t\t\tthis.forceUpdate();\n\t\t\t},\n\t\t\t500,\n\t\t\tdata.node\n\t\t);\n\t\tdata.node.expanded = data.expand;\n\t},\n\n\thandleClick (event, data) {\n\t\tif (this.props.singleSelection) {\n\t\t\tdata.node.selected = data.select;\n\t\t\tthis.setState((prevState) => {\n\t\t\t\tif (\n\t\t\t\t\tthis.state.selectedNode &&\n\t\t\t\t\tthis.state.selectedNode.id !== data.node.id\n\t\t\t\t) {\n\t\t\t\t\tthis.state.selectedNode.selected = false;\n\t\t\t\t}\n\n\t\t\t\treturn { selectedNode: data.node };\n\t\t\t});\n\t\t\titemClicked('Node Selected')(event, data);\n\t\t} else if (\n\t\t\t!this.props.noBranchSelection ||\n\t\t\t(this.props.noBranchSelection && data.node.type !== 'branch')\n\t\t) {\n\t\t\tdata.node.selected = data.select;\n\t\t\t// trigger render\n\t\t\tthis.setState((prevState) => ({ ...prevState }));\n\t\t\titemClicked('Node Selected')(event, data);\n\t\t}\n\t},\n\n\thandleScroll (event, data) {\n\t\ttreeScrolled('Tree scrolled')(event, data);\n\t},\n\n\thandleSearchChange (event) {\n\t\tthis.setState({ searchTerm: event.target.value });\n\t},\n\n\trender () {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{this.props.searchable ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Search\n\t\t\t\t\t\t\tassistiveText=\"Search Tree\"\n\t\t\t\t\t\t\tvalue={this.state.searchTerm}\n\t\t\t\t\t\t\tonChange={this.handleSearchChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t\t<Tree\n\t\t\t\t\tnodes={this.state.nodes}\n\t\t\t\t\tonExpandClick={this.handleExpandClick}\n\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\tonScroll={this.handleScroll}\n\t\t\t\t\tsearchTerm={this.state.searchTerm}\n\t\t\t\t\t{...this.props}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t},\n});\n\nstoriesOf(TREE, module)\n\t.addDecorator((getStory) => (\n\t\t<div className=\"slds-p-around--medium\">\n\t\t\t<IconSettings iconPath=\"/assets/icons\">{getStory()}</IconSettings>\n\t\t</div>\n\t))\n\t.add('Base', () => <DemoTree heading=\"Miscellaneous Foods\" />)\n\t.add('Initial Expanded/Selection', () => (\n\t\t<DemoTree\n\t\t\theading=\"Miscellaneous Foods\"\n\t\t\texampleNodesIndex=\"sampleNodesWithInitialState\"\n\t\t/>\n\t))\n\t.add('No Branch Select', () => (\n\t\t<DemoTree heading=\"Miscellaneous Foods\" noBranchSelection />\n\t))\n\t.add('Single Selection', () => (\n\t\t<DemoTree heading=\"Miscellaneous Foods\" singleSelection />\n\t))\n\t.add('Assistive Heading', () => (\n\t\t<DemoTree assistiveText=\"Miscellaneous Foods\" />\n\t))\n\t.add('Overflow Hidden', () => (\n\t\t<DemoTree\n\t\t\theading=\"Miscellaneous Foods\"\n\t\t\texampleNodesIndex=\"sampleNodesWithLargeDataset\"\n\t\t\tlistStyle={{\n\t\t\t\theight: '300px',\n\t\t\t\toverflowY: 'auto',\n\t\t\t}}\n\t\t/>\n\t))\n\t.add('Large dataset (300+)', () => (\n\t\t<DemoTree\n\t\t\theading=\"Miscellaneous Foods\"\n\t\t\texampleNodesIndex=\"sampleNodesWithLargeDataset\"\n\t\t/>\n\t))\n\t.add('Highlighted Search', () => (\n\t\t<DemoTree heading=\"Results for fruit\" searchable />\n\t));\n"],"file":"storybook-stories.js"}