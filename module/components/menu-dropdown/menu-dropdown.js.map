{"version":3,"sources":["../../../.tmp-es/components/menu-dropdown/menu-dropdown.jsx"],"names":["React","createReactClass","PropTypes","ReactDOM","requiredIf","assign","classNames","isBoolean","isFunction","shortid","Dialog","List","ListItem","ListItemLabel","DefaultTrigger","checkProps","KeyboardNavigable","EventUtil","KEYS","MENU_DROPDOWN","MENU_DROPDOWN_TRIGGER","LIST","documentDefined","document","overlay","createElement","style","top","left","width","height","position","currentOpenDropdown","DropdownNubbinPositions","MenuDropdown","displayName","propTypes","align","oneOf","assistiveText","string","buttonClassName","oneOfType","array","object","buttonInverse","bool","buttonVariant","checkmark","children","node","className","containerClassName","disabled","hasStaticAlignment","hint","hoverCloseDelay","number","iconCategory","props","iconName","iconPosition","iconVariant","iconSize","id","isOpen","label","listItemRenderer","func","length","menuPosition","menuStyle","nubbinPosition","offset","onBlur","onClick","onFocus","openOn","onKeyDown","onMouseDown","onMouseEnter","onMouseLeave","onSelect","onOpen","onClose","options","value","tooltip","triggerClassName","multiple","mixins","getDefaultProps","getInitialState","focusedIndex","selectedIndex","selectedIndices","componentWillMount","generatedId","generate","setCurrentSelectedIndices","componentWillReceiveProps","nextProps","prevProps","setFocus","componentWillUnmount","undefined","isUnmounting","renderOverlay","getId","getIsOpen","state","getIndexByValue","foundIndex","some","element","index","getValueByIndex","getListItemRenderer","isHover","trigger","findDOMNode","focus","getMenu","list","getMenuItem","listItems","setState","values","currentIndices","Array","isArray","push","filter","map","saveRefToTrigger","triggerRendered","saveRefToTriggerContainer","triggerContainer","saveRefToList","saveRefToListItem","listItem","handleKeyboardFocus","handleClose","handleOpen","handleMouseEnter","event","clearTimeout","isClosing","handleMouseLeave","setTimeout","handleClick","handleFocus","handleClickCustomContent","handleSelect","indexOf","concat","deselectIndex","currentSelected","splice","option","optionIndex","handleKeyDown","keyCode","ENTER","SPACE","DOWN","UP","trap","TAB","handleKeyboardNavigate","key","target","toggleOpen","handleCancel","handleClickOutside","renderDefaultMenuContent","customListProps","getListItemId","renderMenuContent","customContent","customContentWithListPropInjection","Children","forEach","child","type","clonedCustomContent","cloneElement","renderInlineMenu","positionClassName","positions","split","join","renderDialog","outsideClickIgnoreClass","marginTop","isInline","context","inheritTargetWidth","querySelector","appendChild","parentNode","removeChild","render","CurrentTrigger","CustomTriggerChildProps","contextTypes","iconPath"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Dropdown Component\n\n// Implements the [Dropdown design pattern](https://www.lightningdesignsystem.com/components/menus/#flavor-dropdown) in React. Child elements that do not have the display name of the value of `MENU_DROPDOWN_TRIGGER` in `components/constants.js` will be considered custom content and rendered in the popover.\n// Based on SLDS v2.1.0-rc.2\n\n// ### React\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport requiredIf from 'react-required-if';\n\nimport assign from 'lodash.assign';\n\n// ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// This project uses `classnames`, \"a simple javascript utility for conditionally\n// joining classNames together.\"\nimport classNames from 'classnames';\n\n// ### isBoolean\nimport isBoolean from 'lodash.isboolean';\n\n// ### isFunction\nimport isFunction from 'lodash.isfunction';\n\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\n\n// ### Children\nimport Dialog from '../utilities/dialog';\nimport List from '../utilities/menu-list';\nimport ListItem from '../utilities/menu-list/item';\nimport ListItemLabel from '../utilities/menu-list/item-label';\n\n// This is the the default Dropdown Trigger, which expects one button as a child.\nimport DefaultTrigger from './button-trigger';\n\n// This component's `checkProps` which issues warnings to developers about properties\n// when in development mode (similar to React's built in development tools)\nimport checkProps from './check-props';\n\n// ### Traits\n\n// #### KeyboardNavigable\nimport KeyboardNavigable from '../../utilities/keyboard-navigable-menu';\n\nimport EventUtil from '../../utilities/event';\nimport KEYS from '../../utilities/key-code';\nimport {\n\tMENU_DROPDOWN,\n\tMENU_DROPDOWN_TRIGGER,\n\tLIST,\n} from '../../utilities/constants';\n\nconst documentDefined = typeof document !== 'undefined';\n\n// The overlay is an optional way to allow the dropdown to close on outside\n// clicks even when those clicks are over areas that wouldn't normally fire\n// click or touch events (for example, iframes). A single overlay is shared\n// between all dropdowns in the app.\nconst overlay = documentDefined\n\t? document.createElement('span')\n\t: { style: {} };\noverlay.style.top = 0;\noverlay.style.left = 0;\noverlay.style.width = '100%';\noverlay.style.height = '100%';\noverlay.style.position = 'absolute';\n\nlet currentOpenDropdown;\n\nconst DropdownNubbinPositions = [\n\t'top left',\n\t'top',\n\t'top right',\n\t'bottom left',\n\t'bottom',\n\t'bottom right',\n];\n\n/**\n * The MenuDropdown component is a variant of the Lightning Design System Menu component. This component\n * may require a polyfill such as [classList](https://github.com/yola/classlist-polyfill) due to\n * [react-onclickoutside](https://github.com/Pomax/react-onclickoutside) if Internet Explorer 11\n * support is needed.\n *\n * This component is wrapped in a [higher order component to listen for clicks outside itself](https://github.com/kentor/react-click-outside) and thus requires use of `ReactDOM`.\n */\nconst MenuDropdown = createReactClass({\n\t// ### Display Name\n\t// Always use the canonical component name as the React display name.\n\tdisplayName: MENU_DROPDOWN,\n\n\t// ### Prop Types\n\tpropTypes: {\n\t\t/**\n\t\t * Aligns the right or left side of the menu with the respective side of the trigger. This is not intended for use with `nubbinPosition`.\n\t\t */\n\t\talign: PropTypes.oneOf(['left', 'right']),\n\t\t/**\n\t\t * This prop is passed onto the triggering `Button`. Text that is visually hidden but read aloud by screenreaders to tell the user what the icon means. You can omit this prop if you are using the `label` prop.\n\t\t */\n\t\tassistiveText: PropTypes.string,\n\t\t/**\n\t\t * CSS classes to be added to triggering button.\n\t\t */\n\t\tbuttonClassName: PropTypes.oneOfType([\n\t\t\tPropTypes.array,\n\t\t\tPropTypes.object,\n\t\t\tPropTypes.string,\n\t\t]),\n\t\t/**\n\t\t * If true, button/icon is white. Meant for buttons or utility icons on dark backgrounds.\n\t\t */\n\t\tbuttonInverse: PropTypes.bool,\n\t\t/**\n\t\t * This prop is passed onto the triggering `Button`. Determines variant of the Button component that triggers dropdown.\n\t\t */\n\t\tbuttonVariant: PropTypes.oneOf([\n\t\t\t'base',\n\t\t\t'neutral',\n\t\t\t'brand',\n\t\t\t'destructive',\n\t\t\t'icon',\n\t\t]),\n\t\t/**\n\t\t * If true, renders checkmark icon on the selected Menu Item.\n\t\t */\n\t\tcheckmark: PropTypes.bool,\n\t\t/**\n\t\t * By default, any children passed into this component will be rendered inside the dropdown menu. If you only need a standard menu, use `options`. If you need custom list items markup, use `listItemRenderer` and `options`. `children` with a `List` should _only_ used if you have a listbox and additional content.\n\t\t *\n\t\t * If you need to modify the trigger button, import the module `design-system-react/dropdown/button-trigger` and render a grandchild of the element type `Button`. Any `props` specified on that `Button` will be assigned to the trigger button. Any `id` prop or event hanlders (`onBlur`, `onClick`, etc.) set on the button grandchild will be overwritten by `MenuDropdown` to enable functionality and accessibility. A custom trigger child will not be considered content for the dropdown menu.\n\t\t *\n\t\t * **List as a child is an experimental API.** If you need custom content _and_ a list, import 'design-system-react/components/menu-list/list' and pass in `<List>`.\n\t\t * ```\n\t\t * <Dropdown>\n\t\t *   <Trigger>\n\t\t *   <Button iconCategory=\"utility\" iconName=\"settings\" />\n\t\t *   </Trigger>\n\t\t *   <div>Look ma! This is Custom Content.</div>\n\t\t *   <List options={[myArray]}/>\n\t\t * </Dropdown>\n\t\t * ```\n\t\t */\n\t\tchildren: PropTypes.node,\n\t\t/**\n\t\t * CSS classes to be added to dropdown menu.\n\t\t */\n\t\tclassName: PropTypes.oneOfType([\n\t\t\tPropTypes.array,\n\t\t\tPropTypes.object,\n\t\t\tPropTypes.string,\n\t\t]),\n\t\t/**\n\t\t * By default, these class names will be added to the absolutely-positioned `Dialog` component.\n\t\t */\n\t\tcontainerClassName: PropTypes.oneOfType([\n\t\t\tPropTypes.array,\n\t\t\tPropTypes.object,\n\t\t\tPropTypes.string,\n\t\t]),\n\t\t/**\n\t\t * This prop is passed onto the triggering `Button`. Prevent dropdown menu from opening. Also applies disabled styling to trigger button.\n\t\t */\n\t\tdisabled: PropTypes.bool,\n\t\t/**\n\t\t * Prevents the dropdown from changing position based on the viewport/window. If set to true your dropdowns can extend outside the viewport _and_ overflow outside of a scrolling parent. If this happens, you might want to consider making the dropdowns contents scrollable to fit the menu on the screen. `hasStaticAlignment` disables this behavior and allows this component to extend beyond boundary elements. _Not tested._\n\t\t */\n\t\thasStaticAlignment: PropTypes.bool,\n\t\t/**\n\t\t * This prop is passed onto the triggering `Button`. Associates an icon button with another element on the page by changes the color of the SVG. Please reference <a href=\"http://www.lightningdesignsystem.com/components/buttons/#hint\">Lightning Design System Buttons > Hint</a>.\n\t\t */\n\t\thint: PropTypes.bool,\n\t\t/**\n\t\t * Delay on menu closing in milliseconds.\n\t\t */\n\t\thoverCloseDelay: PropTypes.number,\n\t\t/**\n\t\t * Name of the icon category. Visit <a href=\"http://www.lightningdesignsystem.com/resources/icons\">Lightning Design System Icons</a> to reference icon categories.\n\t\t */\n\t\ticonCategory: requiredIf(\n\t\t\tPropTypes.oneOf(['action', 'custom', 'doctype', 'standard', 'utility']),\n\t\t\t(props) => !!props.iconName\n\t\t),\n\t\t/**\n\t\t * Name of the icon. Visit <a href=\"http://www.lightningdesignsystem.com/resources/icons\">Lightning Design System Icons</a> to reference icon names.\n\t\t */\n\t\ticonName: PropTypes.string,\n\t\t/**\n\t\t * If omitted, icon position is centered.\n\t\t */\n\t\ticonPosition: PropTypes.oneOf(['left', 'right']),\n\t\t/**\n\t\t * For icon variants, please reference <a href=\"http://www.lightningdesignsystem.com/components/buttons/#icon\">Lightning Design System Icons</a>.\n\t\t */\n\t\ticonVariant: PropTypes.oneOf([\n\t\t\t'bare',\n\t\t\t'container',\n\t\t\t'border',\n\t\t\t'border-filled',\n\t\t\t'small',\n\t\t\t'more',\n\t\t]),\n\t\t/**\n\t\t * Determines the size of the icon.\n\t\t */\n\t\ticonSize: PropTypes.oneOf(['x-small', 'small', 'medium', 'large']),\n\t\t/**\n\t\t * A unique ID is needed in order to support keyboard navigation, ARIA support, and connect the dropdown to the triggering button.\n\t\t */\n\t\tid: PropTypes.string,\n\t\t/**\n\t\t * Forces the dropdown to be open or closed. See controlled/uncontrolled callback/prop pattern for more on suggested use view [Concepts and Best Practices](https://github.com/salesforce-ux/design-system-react/blob/master/CONTRIBUTING.md#concepts-and-best-practices)\n\t\t */\n\t\tisOpen: PropTypes.bool,\n\t\t/**\n\t\t * This prop is passed onto the triggering `Button`. Text within the trigger button.\n\t\t */\n\t\tlabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t\t/**\n\t\t * Custom element that overrides the default Menu Item component.\n\t\t */\n\t\tlistItemRenderer: PropTypes.func,\n\t\t/**\n\t\t * This prop is passed into the List for the menu. Pass null to make it the size of the content, or a string with an integer from here: https://www.lightningdesignsystem.com/components/menus/#flavor-dropdown-height\n\t\t */\n\t\tlength: PropTypes.oneOf([null, '5', '7', '10']),\n\t\t/**\n\t\t * Please select one of the following:\n\t\t * * `absolute` - (default) The dialog will use `position: absolute` and style attributes to position itself. This allows inverted placement or flipping of the dialog.\n\t\t * * `overflowBoundaryElement` - The dialog will overflow scrolling parents. Use on elements that are aligned to the left or right of their target and don't care about the target being within a scrolling parent. Typically this is a popover or tooltip. Dropdown menus can usually open up and down if no room exists. In order to achieve this a portal element will be created and attached to `body`. This element will render into that detached render tree.\n\t\t * * `relative` - No styling or portals will be used. Menus will be positioned relative to their triggers. This is a great choice for HTML snapshot testing.\n\t\t */\n\t\tmenuPosition: PropTypes.oneOf([\n\t\t\t'absolute',\n\t\t\t'overflowBoundaryElement',\n\t\t\t'relative',\n\t\t]),\n\t\t/**\n\t\t * Style applied to menu element (that is the `.slds-dropdown` element)\n\t\t */\n\t\tmenuStyle: PropTypes.object,\n\t\t/**\n\t\t * Positions dropdown menu with a nubbin--that is the arrow notch. The placement options correspond to the placement of the nubbin. This is implemeted with CSS classes and is best used with a `Button` with \"icon container\" styling (`iconVariant=\"container\"`). Use with `isInline` prop, since positioning is determined by CSS via absolute-relative positioning, and using an absolutely positioned menu will not position the menu correctly without manual offsets.\n\t\t */\n\t\tnubbinPosition: PropTypes.oneOf([\n\t\t\t'top left',\n\t\t\t'top',\n\t\t\t'top right',\n\t\t\t'bottom left',\n\t\t\t'bottom',\n\t\t\t'bottom right',\n\t\t]),\n\t\t/**\n\t\t *  Offset adds pixels to the absolutely positioned dropdown menu in the format: ([vertical]px [horizontal]px).\n\t\t */\n\t\toffset: PropTypes.string,\n\t\t/**\n\t\t * Is only called when `openOn` is set to `hover` and when the triggering button loses focus.\n\t\t */\n\t\tonBlur: PropTypes.func,\n\t\t/**\n\t\t * This prop is passed onto the triggering `Button`. Triggered when the trigger button is clicked.\n\t\t */\n\t\tonClick: PropTypes.func,\n\t\t/**\n\t\t * Is only called when `openOn` is set to `hover` and when the triggering button gains focus.\n\t\t */\n\t\tonFocus: PropTypes.func,\n\t\t/**\n\t\t * Determines if mouse hover or click opens or closes the dropdown menu. The default of `click` opens the menu on click, touch, or keyboard navigation and is highly recommended to comply with accessibility standards. The other options are `hover` which opens when the mouse enters the focusable area, and `hybrid` which causes the menu to open on clicking of the trigger, but closes the menu when the mouse leaves the menu and trigger area. If you are planning on using `hover` or `hybrid`, please pause a moment and reconsider.\n\t\t */\n\t\topenOn: PropTypes.oneOf(['hover', 'click', 'hybrid']),\n\t\t/**\n\t\t * Called when a key pressed.\n\t\t */\n\t\tonKeyDown: PropTypes.func,\n\t\t/**\n\t\t * Called when mouse clicks down on the trigger button.\n\t\t */\n\t\tonMouseDown: PropTypes.func,\n\t\t/**\n\t\t * Called when mouse hovers over the trigger button. This is only called if `this.props.openOn` is set to `hover`.\n\t\t */\n\t\tonMouseEnter: PropTypes.func,\n\t\t/**\n\t\t * Called when mouse hover leaves the trigger button. This is only called if `this.props.openOn` is set to `hover`.\n\t\t */\n\t\tonMouseLeave: PropTypes.func,\n\t\t/**\n\t\t * Triggered when an item in the menu is clicked.\n\t\t */\n\t\tonSelect: PropTypes.func,\n\t\t/**\n\t\t * Triggered when the dropdown is opened.\n\t\t */\n\t\tonOpen: PropTypes.func,\n\t\t/**\n\t\t * Triggered when the dropdown is closed.\n\t\t */\n\t\tonClose: PropTypes.func,\n\t\t/**\n\t\t * An array of menu item objects. `className` and `id` object keys are applied to the `li` DOM node. `divider` key can have a value of `top` or `bottom`. `rightIcon` and `leftIcon` are not actually `Icon` components, but prop objects that get passed to an `Icon` component. The `href` key will be added to the `a` and its default click event will be prevented. Here is a sample:\n\t\t * ```\n\t\t * [{\n\t\t *   className: 'custom-li-class',\n\t\t *     divider: 'bottom',\n\t\t *     label: 'A Header',\n\t\t *     type: 'header'\n\t\t *  }, {\n\t\t *     href: 'http://sfdc.co/',\n\t\t *     id: 'custom-li-id',\n\t\t *     label: 'Has a value',\n\t\t *   leftIcon: {\n\t\t *    name: 'settings',\n\t\t *    category: 'utility'\n\t\t *   },\n\t\t *   rightIcon: {\n\t\t *    name: 'settings',\n\t\t *    category: 'utility'\n\t\t *   },\n\t\t *     type: 'item',\n\t\t *     value: 'B0'\n\t\t *  }, {\n\t\t *   type: 'divider'\n\t\t * }]\n\t\t * ```\n\t\t */\n\t\toptions: PropTypes.array,\n\t\t/**\n\t\t * An object of CSS styles that are applied to the triggering button.\n\t\t */\n\t\tstyle: PropTypes.object,\n\t\t/**\n\t\t * If `true`, adds a transparent overlay when the menu is open to handle outside clicks. Allows clicks on iframes to be captured, but also forces a double-click to interact with other elements. If a function is passed, custom overlay logic may be defined by the app.\n\t\t */\n\t\toverlay: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n\t\t/**\n\t\t * Current selected menu item.\n\t\t */\n\t\tvalue: PropTypes.oneOfType([\n\t\t\tPropTypes.number,\n\t\t\tPropTypes.string,\n\t\t\tPropTypes.array,\n\t\t]),\n\t\t/**\n\t\t * This prop is passed onto the triggering `Button`. It creates a tooltip with the content of the `node` provided.\n\t\t */\n\t\ttooltip: PropTypes.node,\n\t\t/**\n\t\t * CSS classes to be added to wrapping trigger `div` around the button.\n\t\t */\n\t\ttriggerClassName: PropTypes.oneOfType([\n\t\t\tPropTypes.array,\n\t\t\tPropTypes.object,\n\t\t\tPropTypes.string,\n\t\t]),\n\t\t/**\n\t\t * Whether this dropdown supports multi select.\n\t\t */\n\t\tmultiple: PropTypes.bool,\n\t},\n\n\tmixins: [KeyboardNavigable],\n\n\tgetDefaultProps () {\n\t\treturn {\n\t\t\talign: 'left',\n\t\t\thoverCloseDelay: 300,\n\t\t\tmenuPosition: 'absolute',\n\t\t\topenOn: 'click',\n\t\t};\n\t},\n\n\tgetInitialState () {\n\t\treturn {\n\t\t\tfocusedIndex: -1,\n\t\t\tselectedIndex: -1,\n\t\t\tselectedIndices: [],\n\t\t};\n\t},\n\n\tcomponentWillMount () {\n\t\t// `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\t\tcheckProps(MENU_DROPDOWN, this.props);\n\n\t\tthis.generatedId = shortid.generate();\n\n\t\tthis.setCurrentSelectedIndices(this.props);\n\t},\n\n\tcomponentWillReceiveProps (nextProps, prevProps) {\n\t\tif (prevProps.value !== nextProps.value) {\n\t\t\tthis.setCurrentSelectedIndices(nextProps);\n\t\t}\n\n\t\tif (prevProps.isOpen !== nextProps.isOpen) {\n\t\t\tthis.setFocus();\n\t\t}\n\t},\n\n\tcomponentWillUnmount () {\n\t\tif (currentOpenDropdown === this) {\n\t\t\tcurrentOpenDropdown = undefined;\n\t\t}\n\t\tthis.isUnmounting = true;\n\t\tthis.renderOverlay(false);\n\t},\n\n\tgetId () {\n\t\treturn this.props.id || this.generatedId;\n\t},\n\n\tgetIsOpen () {\n\t\treturn !!(isBoolean(this.props.isOpen)\n\t\t\t? this.props.isOpen\n\t\t\t: this.state.isOpen);\n\t},\n\n\tgetIndexByValue (value) {\n\t\tlet foundIndex = -1;\n\n\t\tif (this.props.options && this.props.options.length) {\n\t\t\tthis.props.options.some((element, index) => {\n\t\t\t\tif (element && element.value === value) {\n\t\t\t\t\tfoundIndex = index;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t});\n\t\t}\n\n\t\treturn foundIndex;\n\t},\n\n\tgetValueByIndex (index) {\n\t\treturn this.props.options[index];\n\t},\n\n\tgetListItemRenderer () {\n\t\treturn this.props.listItemRenderer\n\t\t\t? this.props.listItemRenderer\n\t\t\t: ListItemLabel;\n\t},\n\n\tsetFocus () {\n\t\tif (!this.isHover && !this.isUnmounting && this.trigger) {\n\t\t\tReactDOM.findDOMNode(this.trigger).focus(); // eslint-disable-line react/no-find-dom-node\n\t\t}\n\t},\n\n\tgetMenu () {\n\t\treturn ReactDOM.findDOMNode(this.list); // eslint-disable-line react/no-find-dom-node\n\t},\n\n\tgetMenuItem (index) {\n\t\tif (index !== undefined && this.listItems) {\n\t\t\treturn ReactDOM.findDOMNode(this.listItems[index]); // eslint-disable-line react/no-find-dom-node\n\t\t}\n\n\t\treturn undefined;\n\t},\n\n\tsetCurrentSelectedIndices (nextProps) {\n\t\tif (this.props.multiple !== true) {\n\t\t\tthis.setState({\n\t\t\t\tselectedIndex: this.getIndexByValue(nextProps.value),\n\t\t\t});\n\t\t} else {\n\t\t\tlet values = [];\n\t\t\tlet currentIndices = [];\n\t\t\tif (!Array.isArray(nextProps.value)) {\n\t\t\t\tvalues.push(nextProps.value);\n\t\t\t} else {\n\t\t\t\tvalues = nextProps.value;\n\t\t\t}\n\t\t\tvalues = values.filter((value) => this.getIndexByValue(value) !== -1);\n\t\t\tcurrentIndices = values.map((value) => this.getIndexByValue(value));\n\n\t\t\tthis.setState({\n\t\t\t\tselectedIndices: currentIndices,\n\t\t\t});\n\t\t}\n\t},\n\n\t// Trigger opens, closes, and recieves focus on close\n\tsaveRefToTrigger (trigger) {\n\t\tthis.trigger = trigger;\n\n\t\tif (!this.state.triggerRendered) {\n\t\t\tthis.setState({ triggerRendered: true });\n\t\t}\n\t},\n\n\t// TriggerContainer is the wrapping outer DOM element which may differ from the actual trigger which is most likely a `button`.\n\tsaveRefToTriggerContainer (triggerContainer) {\n\t\tthis.triggerContainer = triggerContainer;\n\t\tif (!this.trigger) this.trigger = triggerContainer;\n\t},\n\n\tsaveRefToList (list) {\n\t\tthis.list = list;\n\t},\n\n\tsaveRefToListItem (listItem, index) {\n\t\tif (!this.listItems) {\n\t\t\tthis.listItems = {};\n\t\t}\n\n\t\tthis.listItems[index] = listItem;\n\n\t\tif (index === this.state.focusedIndex) {\n\t\t\tthis.handleKeyboardFocus(this.state.focusedIndex);\n\t\t}\n\t},\n\n\thandleClose () {\n\t\tconst isOpen = this.getIsOpen();\n\n\t\tif (isOpen) {\n\t\t\tif (currentOpenDropdown === this) {\n\t\t\t\tcurrentOpenDropdown = undefined;\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tisOpen: false,\n\t\t\t});\n\n\t\t\tthis.isHover = false;\n\n\t\t\tif (this.props.onClose) {\n\t\t\t\tthis.props.onClose();\n\t\t\t}\n\t\t}\n\t},\n\n\thandleOpen () {\n\t\tconst isOpen = this.getIsOpen();\n\n\t\tif (!isOpen) {\n\t\t\tif (currentOpenDropdown && isFunction(currentOpenDropdown.handleClose)) {\n\t\t\t\tcurrentOpenDropdown.handleClose();\n\t\t\t}\n\n\t\t\tcurrentOpenDropdown = this;\n\n\t\t\tthis.setState({\n\t\t\t\tisOpen: true,\n\t\t\t});\n\n\t\t\tif (this.props.onOpen) {\n\t\t\t\tthis.props.onOpen();\n\t\t\t}\n\t\t}\n\t},\n\n\thandleMouseEnter (event) {\n\t\tconst isOpen = this.getIsOpen();\n\n\t\tthis.isHover = true;\n\n\t\tif (!isOpen && this.props.openOn === 'hover') {\n\t\t\tthis.handleOpen();\n\t\t} else {\n\t\t\t// we want this clear when openOn is hover or hybrid\n\t\t\tclearTimeout(this.isClosing);\n\t\t}\n\n\t\tif (this.props.onMouseEnter) {\n\t\t\tthis.props.onMouseEnter(event);\n\t\t}\n\t},\n\n\thandleMouseLeave (event) {\n\t\tconst isOpen = this.getIsOpen();\n\n\t\tif (isOpen) {\n\t\t\tthis.isClosing = setTimeout(() => {\n\t\t\t\tthis.handleClose();\n\t\t\t}, this.props.hoverCloseDelay);\n\t\t}\n\n\t\tif (this.props.onMouseLeave) {\n\t\t\tthis.props.onMouseLeave(event);\n\t\t}\n\t},\n\n\thandleClick (event) {\n\t\tconst isOpen = this.getIsOpen();\n\n\t\tif (!isOpen) {\n\t\t\tthis.handleOpen();\n\t\t\tthis.setFocus();\n\t\t} else {\n\t\t\tthis.handleClose();\n\t\t}\n\n\t\tif (this.props.onClick) {\n\t\t\tthis.props.onClick(event);\n\t\t}\n\t},\n\n\thandleFocus (event) {\n\t\tconst isOpen = this.getIsOpen();\n\n\t\tif (!isOpen) {\n\t\t\tthis.handleOpen();\n\t\t}\n\n\t\tif (this.props.onFocus) {\n\t\t\tthis.props.onFocus(event);\n\t\t}\n\t},\n\n\thandleClickCustomContent () {\n\t\tthis.setFocus();\n\t\tthis.handleClose();\n\n\t\tif (this.props.onSelect) {\n\t\t\tthis.props.onSelect();\n\t\t}\n\t},\n\n\thandleSelect (index) {\n\t\tif (!this.props.multiple) {\n\t\t\tthis.setState({ selectedIndex: index });\n\t\t\tthis.handleClose();\n\t\t\tthis.setFocus();\n\t\t} else if (\n\t\t\tthis.props.multiple &&\n\t\t\tthis.state.selectedIndices.indexOf(index) === -1\n\t\t) {\n\t\t\tconst currentIndices = this.state.selectedIndices.concat(index);\n\t\t\tthis.setState({\n\t\t\t\tselectedIndices: currentIndices,\n\t\t\t});\n\t\t} else if (this.props.multiple) {\n\t\t\tconst deselectIndex = this.state.selectedIndices.indexOf(index);\n\t\t\tconst currentSelected = this.state.selectedIndices;\n\t\t\tcurrentSelected.splice(deselectIndex, 1);\n\t\t\tthis.setState({\n\t\t\t\tselectedIndices: currentSelected,\n\t\t\t});\n\t\t}\n\n\t\tif (this.props.onSelect) {\n\t\t\tconst option = this.getValueByIndex(index);\n\t\t\tthis.props.onSelect(option, { option, optionIndex: index });\n\t\t}\n\t},\n\n\thandleKeyDown (event) {\n\t\tif (event.keyCode) {\n\t\t\tif (\n\t\t\t\tevent.keyCode === KEYS.ENTER ||\n\t\t\t\tevent.keyCode === KEYS.SPACE ||\n\t\t\t\tevent.keyCode === KEYS.DOWN ||\n\t\t\t\tevent.keyCode === KEYS.UP\n\t\t\t) {\n\t\t\t\tEventUtil.trap(event);\n\t\t\t}\n\n\t\t\tif (event.keyCode !== KEYS.TAB) {\n\t\t\t\tconst isOpen = this.getIsOpen();\n\n\t\t\t\tthis.handleKeyboardNavigate({\n\t\t\t\t\tevent,\n\t\t\t\t\tisOpen,\n\t\t\t\t\tkey: event.key,\n\t\t\t\t\tkeyCode: event.keyCode,\n\t\t\t\t\tonSelect: this.handleSelect,\n\t\t\t\t\ttarget: event.target,\n\t\t\t\t\ttoggleOpen: this.toggleOpen,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.handleCancel();\n\t\t\t}\n\n\t\t\tif (this.props.onKeyDown) {\n\t\t\t\tthis.props.onKeyDown(event);\n\t\t\t}\n\t\t}\n\t},\n\n\thandleCancel () {\n\t\tthis.setFocus();\n\t\tthis.handleClose();\n\t},\n\n\thandleClickOutside () {\n\t\tthis.handleClose();\n\t},\n\n\ttoggleOpen () {\n\t\tconst isOpen = this.getIsOpen();\n\t\tthis.setFocus();\n\n\t\tif (isOpen) {\n\t\t\tthis.handleClose();\n\t\t} else {\n\t\t\tthis.handleOpen();\n\t\t}\n\t},\n\n\trenderDefaultMenuContent (customListProps) {\n\t\treturn (\n\t\t\t<List\n\t\t\t\tkey={`${this.getId()}-dropdown-list`}\n\t\t\t\tcheckmark={this.props.checkmark}\n\t\t\t\tgetListItemId={this.getListItemId}\n\t\t\t\titemRefs={this.saveRefToListItem}\n\t\t\t\titemRenderer={this.getListItemRenderer()}\n\t\t\t\tonCancel={this.handleCancel}\n\t\t\t\tonSelect={this.handleSelect}\n\t\t\t\toptions={this.props.options}\n\t\t\t\tref={this.saveRefToList}\n\t\t\t\tselectedIndex={\n\t\t\t\t\t!this.props.multiple ? this.state.selectedIndex : undefined\n\t\t\t\t}\n\t\t\t\tselectedIndices={\n\t\t\t\t\tthis.props.multiple ? this.state.selectedIndices : undefined\n\t\t\t\t}\n\t\t\t\ttriggerId={this.getId()}\n\t\t\t\tlength={this.props.length}\n\t\t\t\t{...customListProps}\n\t\t\t/>\n\t\t);\n\t},\n\n\trenderMenuContent (customContent) {\n\t\tlet customContentWithListPropInjection = [];\n\t\t// Dropdown can take a Trigger component as a child and then return it as the parent DOM element.\n\t\tReact.Children.forEach(customContent, (child) => {\n\t\t\tif (child && child.type.displayName === LIST) {\n\t\t\t\tcustomContentWithListPropInjection.push(\n\t\t\t\t\tthis.renderDefaultMenuContent(child.props)\n\t\t\t\t);\n\t\t\t} else if (child) {\n\t\t\t\tconst clonedCustomContent = React.cloneElement(child, {\n\t\t\t\t\tonClick: this.handleClickCustomContent,\n\t\t\t\t\tkey: shortid.generate(),\n\t\t\t\t});\n\t\t\t\tcustomContentWithListPropInjection.push(clonedCustomContent);\n\t\t\t}\n\t\t});\n\t\tif (customContentWithListPropInjection.length === 0) {\n\t\t\tcustomContentWithListPropInjection = null;\n\t\t}\n\n\t\treturn (\n\t\t\tcustomContentWithListPropInjection || this.renderDefaultMenuContent()\n\t\t);\n\t},\n\n\trenderInlineMenu (customContent, isOpen) {\n\t\tlet positionClassName;\n\n\t\tif (this.props.nubbinPosition) {\n\t\t\tconst positions = this.props.nubbinPosition.split(' ');\n\t\t\tpositionClassName = classNames(\n\t\t\t\t`slds-nubbin--${positions.join('-')}`,\n\t\t\t\tpositions.map((position) => `slds-dropdown--${position}`)\n\t\t\t);\n\n\t\t\t// TODO: allow nubbinPosition prop to set the offset automatically\n\t\t\t// if (this.props.nubbinPosition === 'top right') {\n\t\t\t// \toffset = '-12px -24px';\n\t\t\t// }\n\t\t} else if (this.props.align) {\n\t\t\tpositionClassName = `slds-dropdown--${this.props.align}`;\n\t\t}\n\n\t\treturn isOpen ? (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-dropdown',\n\t\t\t\t\tpositionClassName,\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t\tonMouseEnter={\n\t\t\t\t\tthis.props.openOn === 'hover' ? this.handleMouseEnter : null\n\t\t\t\t}\n\t\t\t\tonMouseLeave={\n\t\t\t\t\tthis.props.openOn === 'hover' ? this.handleMouseLeave : null\n\t\t\t\t}\n\t\t\t\tstyle={this.props.menuStyle}\n\t\t\t>\n\t\t\t\t{this.renderMenuContent(customContent)}\n\t\t\t</div>\n\t\t) : null;\n\t},\n\n\trenderDialog (customContent, isOpen, outsideClickIgnoreClass) {\n\t\tlet positionClassName;\n\t\tlet marginTop;\n\t\tconst offset = this.props.offset;\n\n\t\tif (this.props.nubbinPosition) {\n\t\t\tconst positions = this.props.nubbinPosition.split(' ');\n\t\t\tpositionClassName = classNames(\n\t\t\t\t`slds-nubbin--${positions.join('-')}`,\n\t\t\t\tpositions.map((position) => `slds-dropdown--${position}`)\n\t\t\t);\n\t\t\tmarginTop = 0;\n\t\t\t// TODO: allow nubbinPosition prop to set the offset automatically\n\t\t\t// if (this.props.nubbinPosition === 'top right') {\n\t\t\t// \toffset = '-12px -24px';\n\t\t\t// }\n\t\t} else if (this.props.align) {\n\t\t\tpositionClassName = `slds-dropdown--${this.props.align}`;\n\t\t}\n\n\t\t// FOR BACKWARDS COMPATIBILITY\n\t\tconst menuPosition = this.props.isInline\n\t\t\t? 'relative'\n\t\t\t: this.props.menuPosition; // eslint-disable-line react/prop-types\n\n\t\treturn isOpen ? (\n\t\t\t<Dialog\n\t\t\t\talign={`bottom ${this.props.align}`}\n\t\t\t\tclassName={classNames(this.props.containerClassName)}\n\t\t\t\tcloseOnTabKey\n\t\t\t\tcontentsClassName={classNames(\n\t\t\t\t\t'slds-dropdown',\n\t\t\t\t\t'ignore-react-onclickoutside',\n\t\t\t\t\tpositionClassName,\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t\tcontext={this.context}\n\t\t\t\thasStaticAlignment={this.props.hasStaticAlignment}\n\t\t\t\tinheritWidthOf={this.props.inheritTargetWidth ? 'target' : 'none'}\n\t\t\t\toffset={offset}\n\t\t\t\tonClose={this.handleClose}\n\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\tonMouseEnter={\n\t\t\t\t\tthis.props.openOn === 'hover' ? this.handleMouseEnter : null\n\t\t\t\t}\n\t\t\t\tonMouseLeave={\n\t\t\t\t\tthis.props.openOn === 'hover' ? this.handleMouseLeave : null\n\t\t\t\t}\n\t\t\t\toutsideClickIgnoreClass={outsideClickIgnoreClass}\n\t\t\t\tposition={menuPosition}\n\t\t\t\tstyle={\n\t\t\t\t\tthis.props.menuStyle ||\n\t\t\t\t\tassign({}, this.props.menuStyle, { marginTop })\n\t\t\t\t}\n\t\t\t\tonRequestTargetElement={() => this.trigger}\n\t\t\t>\n\t\t\t\t{this.renderMenuContent(customContent)}\n\t\t\t</Dialog>\n\t\t) : null;\n\t},\n\n\trenderOverlay (isOpen) {\n\t\tif (isFunction(overlay) && documentDefined) {\n\t\t\toverlay(isOpen, overlay);\n\t\t} else if (\n\t\t\tthis.props.overlay &&\n\t\t\tisOpen &&\n\t\t\t!this.overlay &&\n\t\t\tdocumentDefined\n\t\t) {\n\t\t\tthis.overlay = overlay;\n\t\t\tdocument.querySelector('body').appendChild(this.overlay);\n\t\t} else if (!isOpen && this.overlay && this.overlay.parentNode) {\n\t\t\tthis.overlay.parentNode.removeChild(this.overlay);\n\t\t\tthis.overlay = undefined;\n\t\t}\n\t},\n\n\trender () {\n\t\t// Dropdowns are used by other components. The default trigger is a button, but some other components use `li` elements. The following allows `MenuDropdown` to be extended by providing a child component with the displayName of `DropdownTrigger`.\n\t\tlet CurrentTrigger = DefaultTrigger;\n\n\t\tlet CustomTriggerChildProps = {};\n\n\t\t// Child elements that do not have the display name of the value of `MENU_DROPDOWN_TRIGGER` in `components/constants.js` will be considered custom content and rendered in the popover.\n\t\tlet customContent = [];\n\n\t\t// Dropdown can take a Trigger component as a child and then return it as the parent DOM element.\n\t\tReact.Children.forEach(this.props.children, (child) => {\n\t\t\tif (child && child.type.displayName === MENU_DROPDOWN_TRIGGER) {\n\t\t\t\t// `CustomTriggerChildProps` is not used by the default button Trigger, but by other triggers\n\t\t\t\tCustomTriggerChildProps = child.props;\n\t\t\t\tCurrentTrigger = child.type;\n\t\t\t} else {\n\t\t\t\tcustomContent.push(child);\n\t\t\t}\n\t\t});\n\n\t\tif (customContent.length === 0) {\n\t\t\tcustomContent = null;\n\t\t}\n\n\t\tconst outsideClickIgnoreClass = `ignore-click-${this.getId()}`;\n\t\tconst isOpen = !this.props.disabled && this.getIsOpen() && !!this.trigger;\n\n\t\tthis.renderOverlay(isOpen);\n\n\t\t/* Below are three sections of props:\n\t\t - The first are the props that may be given by the dropdown component. These may get deprecated in the future.\n\t\t - The next set of props (`CustomTriggerChildProps`) are props that can be overwritten by the end developer.\n\t\t - The final set are props that should not be overwritten, since they are ones that tie the trigger to the dropdown menu.\n\t\t*/\n\n\t\treturn (\n\t\t\t<CurrentTrigger\n\t\t\t\taria-haspopup\n\t\t\t\tassistiveText={this.props.assistiveText}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\toutsideClickIgnoreClass,\n\t\t\t\t\tthis.props.buttonClassName\n\t\t\t\t)}\n\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\thint={this.props.hint}\n\t\t\t\ticonCategory={this.props.iconCategory}\n\t\t\t\ticonName={this.props.iconName}\n\t\t\t\ticonPosition={this.props.iconPosition}\n\t\t\t\ticonSize={this.props.iconSize}\n\t\t\t\ticonVariant={this.props.iconVariant}\n\t\t\t\tid={this.getId()}\n\t\t\t\tinverse={this.props.buttonInverse}\n\t\t\t\tisOpen={isOpen}\n\t\t\t\tlabel={this.props.label}\n\t\t\t\tmenu={this.renderDialog(customContent, isOpen, outsideClickIgnoreClass)}\n\t\t\t\tonBlur={this.props.onBlur}\n\t\t\t\tonClick={\n\t\t\t\t\tthis.props.openOn === 'click' || this.props.openOn === 'hybrid'\n\t\t\t\t\t\t? this.handleClick\n\t\t\t\t\t\t: this.props.onClick\n\t\t\t\t}\n\t\t\t\tonFocus={this.props.openOn === 'hover' ? this.handleFocus : null}\n\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\tonMouseDown={this.props.onMouseDown}\n\t\t\t\tonMouseEnter={\n\t\t\t\t\tthis.props.openOn === 'hover' || this.props.openOn === 'hybrid'\n\t\t\t\t\t\t? this.handleMouseEnter\n\t\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t\tonMouseLeave={\n\t\t\t\t\tthis.props.openOn === 'hover' || this.props.openOn === 'hybrid'\n\t\t\t\t\t\t? this.handleMouseLeave\n\t\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t\topenOn={this.props.openOn}\n\t\t\t\tref={this.saveRefToTriggerContainer}\n\t\t\t\tstyle={this.props.style}\n\t\t\t\ttabIndex={isOpen ? '-1' : '0'}\n\t\t\t\ttooltip={this.props.tooltip}\n\t\t\t\ttriggerClassName={this.props.triggerClassName}\n\t\t\t\ttriggerRef={this.saveRefToTrigger}\n\t\t\t\tvariant={this.props.buttonVariant}\n\t\t\t\t{...CustomTriggerChildProps}\n\t\t\t/>\n\t\t);\n\t},\n});\n\nMenuDropdown.contextTypes = {\n\ticonPath: PropTypes.string,\n};\n\nexport default MenuDropdown;\nexport { ListItem, ListItemLabel, DropdownNubbinPositions };\n"],"file":"menu-dropdown.js"}