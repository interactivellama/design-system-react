{"version":3,"sources":["../../../../.tmp-es/components/date-picker/private/year-picklist.jsx"],"names":["React","createReactClass","PropTypes","MenuPicklist","DatepickerYearSelector","displayName","propTypes","id","string","initialDateForCalendarRender","instanceOf","Date","isRequired","onChangeMonth","func","relativeYearFrom","number","relativeYearTo","yearPicklistButtonRef","getOptions","now","fromYear","getFullYear","props","toYear","opts","year","push","label","value","getSelectedValueIndex","selectedYear","handleSelect","selectedValue","setFullYear","parseInt","render"],"mappings":"AAAA;;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AAEA,IAAMC,yBAAyBH,iBAAiB;AAC/CI,eAAa,4BADkC;AAG/CC,aAAW;AACV;;;AAGAC,QAAIL,UAAUM,MAJJ;;AAKV;;;AAGAC,kCAA8BP,UAAUQ,UAAV,CAAqBC,IAArB,EAA2BC,UAR/C;;AASV;;;AAGAC,mBAAeX,UAAUY,IAAV,CAAeF,UAZpB;;AAaV;;;AAGAG,sBAAkBb,UAAUc,MAhBlB;;AAiBV;;;AAGAC,oBAAgBf,UAAUc,MApBhB;;AAqBV;;;AAGAE,2BAAuBhB,UAAUY;AAxBvB,GAHoC;AA8B/CK,YA9B+C,wBA8BjC;AACb,QAAMC,MAAM,IAAIT,IAAJ,EAAZ;AACA,QAAMU,WAAWD,IAAIE,WAAJ,KAAoB,KAAKC,KAAL,CAAWR,gBAAhD;AACA,QAAMS,SAASJ,IAAIE,WAAJ,KAAoB,KAAKC,KAAL,CAAWN,cAA9C;AACA,QAAMQ,OAAO,EAAb;;AAEA,SAAK,IAAIC,OAAOL,QAAhB,EAA0BK,OAAOF,MAAjC,EAAyCE,QAAQ,CAAjD,EAAoD;AACnDD,WAAKE,IAAL,CAAU;AAAEC,yBAAUF,IAAV,CAAF;AAAoBG,eAAOH;AAA3B,OAAV;AACA;;AACD,WAAOD,IAAP;AACA,GAxC8C;AA0C/CK,uBA1C+C,mCA0CtB;AACxB,QAAMV,MAAM,IAAIT,IAAJ,EAAZ;AACA,QAAMoB,eAAe,KAAKR,KAAL,CAAWd,4BAAX,CAAwCa,WAAxC,EAArB;AACA,QAAMD,WAAWD,IAAIE,WAAJ,KAAoB,KAAKC,KAAL,CAAWR,gBAAhD;AACA,WAAOgB,eAAeV,QAAtB;AACA,GA/C8C;AAiD/CW,cAjD+C,wBAiDjCC,aAjDiC,EAiDlB;AAC5B,QAAIA,aAAJ,EAAmB;AAClB,WAAKV,KAAL,CAAWV,aAAX,CACC,IAAIF,IAAJ,CACC,KAAKY,KAAL,CAAWd,4BAAX,CAAwCyB,WAAxC,CACCC,SAASF,cAAcJ,KAAvB,EAA8B,EAA9B,CADD,CADD,CADD;AAOA;AACD,GA3D8C;AA6D/CO,QA7D+C,oBA6DrC;AACT,WACC;AAAK,iBAAU;AAAf,OACC,oBAAC,YAAD;AACC,iBAAW,KAAKb,KAAL,CAAWL,qBADvB;AAEC,iBAAW,KAFZ;AAGC,iBAAU,uCAHX;AAIC,wBAJD;AAKC,oBAAO,KAAKK,KAAL,CAAWhB,EAAlB,mBALD;AAMC,oBAAa,UANd;AAOC,gBAAU,KAAKyB,YAPhB;AAQC,eAAS,KAAKb,UAAL,EARV;AASC,mBAAY,MATb;AAUC,aAAO,KAAKI,KAAL,CAAWd,4BAAX,CAAwCa,WAAxC,EAVR;AAWC,sBAAgB,KAAKQ,qBAAL;AAXjB,MADD,CADD;AAiBA;AA/E8C,CAAjB,CAA/B;AAkFA,eAAe1B,sBAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\nimport MenuPicklist from '../../menu-picklist';\n\nconst DatepickerYearSelector = createReactClass({\n\tdisplayName: 'SLDSDatepickerYearSelector',\n\n\tpropTypes: {\n\t\t/**\n\t\t * HTML id for component\n\t\t */\n\t\tid: PropTypes.string,\n\t\t/**\n\t\t * Date used to create calendar that is displayed. This is typically the initial day focused when using the keyboard navigation. Focus will be set to this date if available.\n\t\t */\n\t\tinitialDateForCalendarRender: PropTypes.instanceOf(Date).isRequired,\n\t\t/**\n\t\t * Displayed calendar has changed or re-rendered\n\t\t */\n\t\tonChangeMonth: PropTypes.func.isRequired,\n\t\t/**\n\t\t * Offset of year from current year that can be selected in the year selection dropdown. (2017 - 5 = 2012).\n\t\t */\n\t\trelativeYearFrom: PropTypes.number,\n\t\t/**\n\t\t * Offset of year from current year that can be selected in the year selection dropdown. (2017 + 5 = 2012).\n\t\t */\n\t\trelativeYearTo: PropTypes.number,\n\t\t/**\n\t\t * Callback that passes in the DOM reference of the `<button>` DOM node within this component. Primary use is to allow `focus` to be called. You should still test if the node exists, since rendering is asynchronous. `buttonRef={(component) => { if(component) console.log(component); }}`\n\t\t */\n\t\tyearPicklistButtonRef: PropTypes.func,\n\t},\n\n\tgetOptions () {\n\t\tconst now = new Date();\n\t\tconst fromYear = now.getFullYear() + this.props.relativeYearFrom;\n\t\tconst toYear = now.getFullYear() + this.props.relativeYearTo;\n\t\tconst opts = [];\n\n\t\tfor (let year = fromYear; year < toYear; year += 1) {\n\t\t\topts.push({ label: `${year}`, value: year });\n\t\t}\n\t\treturn opts;\n\t},\n\n\tgetSelectedValueIndex () {\n\t\tconst now = new Date();\n\t\tconst selectedYear = this.props.initialDateForCalendarRender.getFullYear();\n\t\tconst fromYear = now.getFullYear() + this.props.relativeYearFrom;\n\t\treturn selectedYear - fromYear;\n\t},\n\n\thandleSelect (selectedValue) {\n\t\tif (selectedValue) {\n\t\t\tthis.props.onChangeMonth(\n\t\t\t\tnew Date(\n\t\t\t\t\tthis.props.initialDateForCalendarRender.setFullYear(\n\t\t\t\t\t\tparseInt(selectedValue.value, 10)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t},\n\n\trender () {\n\t\treturn (\n\t\t\t<div className=\"slds-form-element\">\n\t\t\t\t<MenuPicklist\n\t\t\t\t\tbuttonRef={this.props.yearPicklistButtonRef}\n\t\t\t\t\tcheckmark={false}\n\t\t\t\t\tclassName=\"slds-picklist--fluid slds-shrink-none\"\n\t\t\t\t\tinitialFocus\n\t\t\t\t\tid={`${this.props.id}-year-picklist`}\n\t\t\t\t\tmenuPosition=\"relative\"\n\t\t\t\t\tonSelect={this.handleSelect}\n\t\t\t\t\toptions={this.getOptions()}\n\t\t\t\t\tplaceholder=\"Year\"\n\t\t\t\t\tvalue={this.props.initialDateForCalendarRender.getFullYear()}\n\t\t\t\t\tinitValueIndex={this.getSelectedValueIndex()}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t},\n});\n\nexport default DatepickerYearSelector;\n"],"file":"year-picklist.js"}