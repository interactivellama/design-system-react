{"version":3,"sources":["../../../.tmp-es/components/button/index.jsx"],"names":["React","createReactClass","requiredIf","PropTypes","classNames","ButtonIcon","checkProps","PopoverTooltip","BUTTON","Button","displayName","propTypes","string","oneOfType","bool","assistiveText","buttonRef","func","className","array","object","disabled","hint","iconCategory","oneOf","props","iconName","iconClassName","iconPath","iconPosition","iconSize","iconVariant","id","inverse","label","node","onBlur","onClick","onFocus","onKeyDown","onKeyPress","onKeyUp","onMouseDown","onMouseEnter","onMouseLeave","responsive","tabIndex","type","title","tooltip","variant","getDefaultProps","componentWillMount","getClassName","isIcon","iconMore","iconBorder","iconGlobalHeader","showButtonVariant","plainInverseBtn","plainInverseIcon","moreInverseIcon","borderInverseIcon","handleClick","event","renderIcon","name","renderLabel","iconOnly","renderButton","component","children","renderTooltip","render"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// Implements the [Button design pattern](https://lightningdesignsystem.com/components/buttons/) in React.\n// Based on SLDS v2.2.1\n\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport requiredIf from 'react-required-if';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ButtonIcon from '../icon/button-icon';\nimport checkProps from './check-props';\nimport PopoverTooltip from '../popover-tooltip';\n\nimport { BUTTON } from '../../utilities/constants';\n\n/**\n * The Button component is the Lightning Design System Button component. The Button should be used for label buttons, icon buttons, or buttons that have both labels and icons.\n * Either a <code>label</code> or <code>assistiveText</code> is required; see the Prop Details table below.\n * For buttons that maintain selected/unselected states, use the <a href=\"#/button-stateful\">ButtonStateful</a> component.\n */\nconst Button = createReactClass({\n\tdisplayName: BUTTON,\n\n\tpropTypes: {\n\t\t/**\n\t\t * Used if the Button triggers a tooltip. The value should match the `id` of the element with `role=\"tooltip\"`.\n\t\t */\n\t\t'aria-describedby': PropTypes.string,\n\t\t/**\n\t\t * Establishes a relationship between an interactive parent element and a child element to indicate which child element a parent element affects. Frequently used in cases where buttons or tabs are associated with exposing expandable regions.\n\t\t */\n\t\t'aria-controls': PropTypes.string,\n\t\t/**\n\t\t * Used if the Button triggers a menu or popup. Bool indicates if the menu or popup is open or closed.\n\t\t */\n\t\t'aria-expanded': PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n\t\t/**\n\t\t * True if Button triggers a menu or popup to open/close.\n\t\t */\n\t\t'aria-haspopup': PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n\t\t/**\n\t\t * Text that is visually hidden but read aloud by screenreaders to tell the user what the icon means.\n\t\t * If the button has an icon and a visible label, you can omit the <code>assistiveText</code> prop and use the <code>label</code> prop.\n\t\t */\n\t\tassistiveText: PropTypes.string,\n\t\t/**\n\t\t * Callback that passes in the DOM reference of the `<button>` DOM node within this component. Primary use is to allow `focus` to be called. You should still test if the node exists, since rendering is asynchronous. `buttonRef={(component) => { if(component) console.log(component); }}`\n\t\t */\n\t\tbuttonRef: PropTypes.func,\n\t\t/**\n\t\t * CSS classes to be added to button.\n\t\t */\n\t\tclassName: PropTypes.oneOfType([\n\t\t\tPropTypes.array,\n\t\t\tPropTypes.object,\n\t\t\tPropTypes.string,\n\t\t]),\n\t\t/**\n\t\t * Disables the button and adds disabled styling.\n\t\t */\n\t\tdisabled: PropTypes.bool,\n\t\t/**\n\t\t * Associates an icon button with another element on the page by changes the color of the SVG. Please reference <a href=\"http://www.lightningdesignsystem.com/components/buttons/#hint\">Lightning Design System Buttons > Hint</a>.\n\t\t */\n\t\thint: PropTypes.bool,\n\t\t/**\n\t\t * Name of the icon category. Visit <a href=\"http://www.lightningdesignsystem.com/resources/icons\">Lightning Design System Icons</a> to reference icon categories.\n\t\t */\n\t\ticonCategory: requiredIf(\n\t\t\tPropTypes.oneOf(['action', 'custom', 'doctype', 'standard', 'utility']),\n\t\t\t(props) => !!props.iconName\n\t\t),\n\t\t/**\n\t\t * CSS classes to be added to icon.\n\t\t */\n\t\ticonClassName: PropTypes.oneOfType([\n\t\t\tPropTypes.array,\n\t\t\tPropTypes.object,\n\t\t\tPropTypes.string,\n\t\t]),\n\t\t/**\n\t\t * Name of the icon. Visit <a href=\"http://www.lightningdesignsystem.com/resources/icons\">Lightning Design System Icons</a> to reference icon names.\n\t\t */\n\t\ticonName: PropTypes.string,\n\t\t/**\n\t\t * Path to the icon. This will override any global icon settings.\n\t\t */\n\t\ticonPath: PropTypes.string,\n\t\t/**\n\t\t * If omitted, icon position is centered.\n\t\t */\n\t\ticonPosition: PropTypes.oneOf(['left', 'right']),\n\t\t/**\n\t\t * Determines the size of the icon.\n\t\t */\n\t\ticonSize: PropTypes.oneOf(['x-small', 'small', 'medium', 'large']),\n\t\t/**\n\t\t * For icon variants, please reference <a href=\"http://www.lightningdesignsystem.com/components/buttons/#icon\">Lightning Design System Icons</a>.\n\t\t */\n\t\ticonVariant: PropTypes.oneOf([\n\t\t\t'bare',\n\t\t\t'container',\n\t\t\t'border',\n\t\t\t'border-filled',\n\t\t\t'more',\n\t\t\t'global-header',\n\t\t]),\n\t\t/**\n\t\t * Id string applied to button node.\n\t\t */\n\t\tid: PropTypes.string,\n\t\t/**\n\t\t * If true, button/icon is white. Meant for buttons or utility icons on dark backgrounds.\n\t\t */\n\t\tinverse: PropTypes.bool,\n\t\t/**\n\t\t * Visible label on the button. If the button is an icon button with no label, you must use the <code>assistiveText</code> prop.\n\t\t */\n\t\tlabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t\t/**\n\t\t * Triggered when focus is removed.\n\t\t */\n\t\tonBlur: PropTypes.func,\n\t\t/**\n\t\t * Triggered when the button is clicked.\n\t\t */\n\t\tonClick: PropTypes.func,\n\t\t/**\n\t\t * Triggered when component is focused.\n\t\t */\n\t\tonFocus: PropTypes.func,\n\t\t/**\n\t\t * Triggered when a key is pressed down\n\t\t */\n\t\tonKeyDown: PropTypes.func,\n\t\t/**\n\t\t * Triggered when a key is pressed and released\n\t\t */\n\t\tonKeyPress: PropTypes.func,\n\t\t/**\n\t\t * Triggered when a key is released\n\t\t */\n\t\tonKeyUp: PropTypes.func,\n\t\t/**\n\t\t * Triggered when a mouse button is pressed down\n\t\t */\n\t\tonMouseDown: PropTypes.func,\n\t\t/**\n\t\t * Triggered when a mouse arrow hovers\n\t\t */\n\t\tonMouseEnter: PropTypes.func,\n\t\t/**\n\t\t * Triggered when a mouse arrow no longer hovers\n\t\t */\n\t\tonMouseLeave: PropTypes.func,\n\t\t/**\n\t\t * If true, button scales to 100% width on small form factors.\n\t\t */\n\t\tresponsive: PropTypes.bool,\n\t\t/**\n\t\t * Write <code>\"-1\"</code> if you don't want the user to tab to the button.\n\t\t */\n\t\ttabIndex: PropTypes.string,\n\t\t/**\n\t\t * Button type\n\t\t */\n\t\ttype: PropTypes.oneOf(['reset', 'submit', 'button']),\n\t\t/**\n\t\t * HTML title attribute\n\t\t */\n\t\ttitle: PropTypes.string,\n\t\t/**\n\t\t * [Deprecated] Tooltip on button. Button should be a child of `Tooltip` instead.\n\t\t */\n\t\ttooltip: PropTypes.node,\n\t\t/**\n\t\t * Different types of buttons\n\t\t */\n\t\tvariant: PropTypes.oneOf([\n\t\t\t'base',\n\t\t\t'link',\n\t\t\t'neutral',\n\t\t\t'brand',\n\t\t\t'destructive',\n\t\t\t'success',\n\t\t\t'icon',\n\t\t]),\n\t},\n\n\tgetDefaultProps () {\n\t\treturn {\n\t\t\tdisabled: false,\n\t\t\thint: false,\n\t\t\ticonSize: 'medium',\n\t\t\tresponsive: false,\n\t\t\ttype: 'button',\n\t\t\tvariant: 'neutral',\n\t\t};\n\t},\n\n\tcomponentWillMount () {\n\t\t// `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\t\tcheckProps(BUTTON, this.props);\n\t},\n\n\tgetClassName () {\n\t\tconst isIcon = this.props.variant === 'icon';\n\n\t\tlet iconVariant = this.props.iconVariant;\n\t\tconst iconMore = iconVariant === 'more';\n\t\tconst iconBorder = iconVariant === 'border';\n\t\tconst iconGlobalHeader = iconVariant === 'global-header';\n\n\t\tconst showButtonVariant =\n\t\t\t(this.props.variant !== 'base' &&\n\t\t\t\t!iconVariant &&\n\t\t\t\t!this.props.inverse &&\n\t\t\t\tthis.props.variant !== 'link') ||\n\t\t\ticonVariant === 'bare';\n\t\tconst plainInverseBtn = this.props.inverse && !isIcon;\n\t\tconst plainInverseIcon =\n\t\t\tthis.props.inverse && isIcon && !iconMore && !iconBorder;\n\t\tconst moreInverseIcon = this.props.inverse && iconMore;\n\t\tconst borderInverseIcon = this.props.inverse && iconBorder;\n\n\t\t// After hijacking `iconVariant` to let `Button` know it's in the header, we reset to container style for the actual button CSS.\n\t\tif (iconVariant === 'global-header') {\n\t\t\ticonVariant = 'container';\n\t\t}\n\n\t\treturn classNames(\n\t\t\t{\n\t\t\t\t'slds-button': this.props.variant !== 'link',\n\t\t\t\t[`slds-button--${this.props.variant}`]: showButtonVariant,\n\t\t\t\t'slds-button--inverse': plainInverseBtn,\n\t\t\t\t'slds-button--icon-inverse': plainInverseIcon || moreInverseIcon,\n\t\t\t\t'slds-button--icon-border-inverse': borderInverseIcon,\n\t\t\t\t[`slds-button--icon-${iconVariant}`]: iconVariant && !borderInverseIcon,\n\t\t\t\t'slds-global-header__button--icon': iconGlobalHeader,\n\t\t\t\t// If icon has a container, then we apply the icon size to the container not the svg. Icon size is medium by default, so we don't need to explicitly render it here.\n\t\t\t\t[`slds-button--icon-${this.props.iconSize}`]:\n\t\t\t\t\ticonVariant && this.props.iconSize !== 'medium',\n\t\t\t\t'slds-button--reset': this.props.variant === 'link',\n\t\t\t\t'slds-text-link': this.props.variant === 'link',\n\t\t\t},\n\t\t\tthis.props.className\n\t\t);\n\t},\n\n\thandleClick (event) {\n\t\tif (this.props.onClick) {\n\t\t\tthis.props.onClick(event);\n\t\t}\n\t},\n\n\trenderIcon (name) {\n\t\tconst iconSize =\n\t\t\tthis.props.iconSize === '' || this.props.iconVariant\n\t\t\t\t? null\n\t\t\t\t: this.props.iconSize;\n\t\treturn (\n\t\t\t<ButtonIcon\n\t\t\t\tcategory={this.props.iconCategory || 'utility'} // BREAKING CHANGE we will introduce in 1.0. For the moment, set default prop here if none specified.\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-global-header__icon':\n\t\t\t\t\t\t\tthis.props.iconVariant === 'global-header',\n\t\t\t\t\t},\n\t\t\t\t\tthis.props.iconClassName\n\t\t\t\t)}\n\t\t\t\thint={this.props.hint}\n\t\t\t\tinverse={this.props.inverse}\n\t\t\t\tname={name}\n\t\t\t\tpath={this.props.iconPath}\n\t\t\t\tposition={this.props.iconPosition}\n\t\t\t\tsize={iconSize}\n\t\t\t/>\n\t\t);\n\t},\n\n\trenderLabel () {\n\t\tconst iconOnly = this.props.iconName || this.props.iconPath;\n\n\t\treturn iconOnly && this.props.assistiveText ? (\n\t\t\t<span className=\"slds-assistive-text\">{this.props.assistiveText}</span>\n\t\t) : (\n\t\t\tthis.props.label\n\t\t);\n\t},\n\n\trenderButton () {\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-controls={this.props['aria-controls']}\n\t\t\t\taria-describedby={this.props['aria-describedby']}\n\t\t\t\taria-expanded={this.props['aria-expanded']}\n\t\t\t\taria-haspopup={this.props['aria-haspopup']}\n\t\t\t\tclassName={this.getClassName()}\n\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\tid={this.props.id}\n\t\t\t\tonBlur={this.props.onBlur}\n\t\t\t\tonClick={this.handleClick}\n\t\t\t\tonFocus={this.props.onFocus}\n\t\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\t\tonKeyPress={this.props.onKeyPress}\n\t\t\t\tonKeyUp={this.props.onKeyUp}\n\t\t\t\tonMouseDown={this.props.onMouseDown}\n\t\t\t\tonMouseEnter={this.props.onMouseEnter}\n\t\t\t\tonMouseLeave={this.props.onMouseLeave}\n\t\t\t\tref={(component) => {\n\t\t\t\t\tif (this.props.buttonRef) {\n\t\t\t\t\t\tthis.props.buttonRef(component);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={this.props.title}\n\t\t\t\ttype={this.props.type}\n\t\t\t>\n\t\t\t\t{this.props.iconPosition === 'right' ? this.renderLabel() : null}\n\n\t\t\t\t{this.props.iconName || this.props.iconPath\n\t\t\t\t\t? this.renderIcon(this.props.iconName)\n\t\t\t\t\t: null}\n\t\t\t\t{this.props.iconVariant === 'more' ? (\n\t\t\t\t\t<ButtonIcon category=\"utility\" name=\"down\" size=\"x-small\" />\n\t\t\t\t) : null}\n\n\t\t\t\t{this.props.iconPosition === 'left' || !this.props.iconPosition\n\t\t\t\t\t? this.renderLabel()\n\t\t\t\t\t: null}\n\t\t\t\t{\n\t\t\t\t\tthis.props.children // eslint-disable-line react/prop-types\n\t\t\t\t}\n\t\t\t</button>\n\t\t);\n\t},\n\n\t// This is present for backwards compatibility and should be removed at a future breaking change release. Please wrap a `Button` in a `PopoverTooltip` to achieve the same result. There will be an extra trigger `div` wrapping the `Button` though.\n\trenderTooltip () {\n\t\treturn (\n\t\t\t<PopoverTooltip content={this.props.tooltip}>\n\t\t\t\t{this.renderButton}\n\t\t\t</PopoverTooltip>\n\t\t);\n\t},\n\n\trender () {\n\t\treturn this.props.tooltip ? this.renderTooltip() : this.renderButton();\n\t},\n});\n\nexport default Button;\n"],"file":"index.js"}